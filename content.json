{"meta":{"title":"HamsterStore","subtitle":"Hamster","description":"sec place","author":"Hamster","url":"http://laixinly.top","root":"/"},"pages":[{"title":"所有分类","date":"2021-04-01T02:43:00.678Z","updated":"2021-02-27T18:49:38.000Z","comments":true,"path":"categories/index.html","permalink":"http://laixinly.top/categories/index.html","excerpt":"","text":""},{"title":"","date":"2021-04-25T03:24:03.434Z","updated":"2021-04-23T08:46:45.016Z","comments":true,"path":"about/index.html","permalink":"http://laixinly.top/about/index.html","excerpt":"","text":"关于我 关于我 你知道什么 –《关于我》 >-"},{"title":"所有标签","date":"2021-04-01T02:43:17.222Z","updated":"2021-04-01T02:43:17.213Z","comments":true,"path":"tags/index.html","permalink":"http://laixinly.top/tags/index.html","excerpt":"","text":""},{"title":"","date":"2021-04-01T02:43:07.331Z","updated":"2021-02-27T18:52:40.000Z","comments":true,"path":"mylist/index.html","permalink":"http://laixinly.top/mylist/index.html","excerpt":"","text":""}],"posts":[{"title":"关于音乐的分享","slug":"音乐分享","date":"2021-04-06T01:14:59.594Z","updated":"2021-04-11T09:57:55.012Z","comments":true,"path":"2021/04/06/音乐分享/","link":"","permalink":"http://laixinly.top/2021/04/06/%E9%9F%B3%E4%B9%90%E5%88%86%E4%BA%AB/","excerpt":"","text":"前言 Hello大家好!!!这是我第一次尝试写下关于音乐分享的文章，很不成熟也很可能味如嚼蜡，谢谢您的谅解！！ 推荐歌单仅仅是个人喜好哦！ 全部歌曲都可以直接点击播放 关于我喜欢的音乐风格小时候对于听歌这件事主要还是小时侯家庭的影响，在我还在母亲肚子里时我父母听到别人聊天时说到听音乐也是一种“胎教”，便两个人去了我们这个小城市的音响店买了一对立式的音响和一个功放机，开始在家里播放音乐，根据后来他们所说，最早期播放的大多是古典音乐，像莫扎特、巴赫的钢琴曲和交响曲，后来觉得有些乏味，便开始播放邓丽君，陈百强，张学友的歌曲。 var ap = new APlayer({ element: document.getElementById(\"aplayer-xJPbTZXY\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"月亮代表我的心\", author: \"邓丽君\", url: \"https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBcXVhc1dPM0p5SlZpQ0tTYTA4VG1CUDRaM2pvP2U9Q2JjQjd3.mp3\", pic: \"https://7.dusays.com/2021/04/08/1ad5d5ee80c17.jpeg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); var ap = new APlayer({ element: document.getElementById(\"aplayer-RMJUJztk\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"偏偏喜欢你\", author: \"陈百强\", url: \"http://music.163.com/song/media/outer/url?id=27874938.mp3\", pic: \"https://7.dusays.com/2021/04/08/9418e0dfaf794.jpeg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); var ap = new APlayer({ element: document.getElementById(\"aplayer-XqoIpbjg\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"吻别\", author: \"张学友\", url: \"http://music.163.com/song/media/outer/url?id=190449.mp3\", pic: \"https://7.dusays.com/2021/04/08/018df1198900f.jpeg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 如今在我家书柜还存放着当年的CD，但也有一部分在搬家的过程中丢失了。我父母在我小时候的印象里总是会抱着一些CD回来，放进CD机等待播放，印象最深刻的是两件事，第一个便是在CD机放进CD机后并不能马上播放歌曲，因为功放机还需要一点点的“热身”，叫做热机，功放在第一次开机时会有很清脆的滴答声，而真正热身好则是在大约2分钟后有一声非常清脆的滴答声，这个时候便可以按下CD机上的播放键了。 var ap = new APlayer({ element: document.getElementById(\"aplayer-HJTOLKEK\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"Blue Bossa\", author: \"Eddie Higgins\", url: \"http://music.163.com/song/media/outer/url?id=1307049.mp3\", pic: \"https://i.loli.net/2021/04/08/FufDKxeGiPJdXNU.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 第二件印象深刻的事情便是小学每次放学坐公交车回家，常常会在走进屋子前听到里面传来的乐器声或者唱歌的人声，闷闷的，而打开门走进去的一瞬间耳朵就会被音乐包裹，如同爱丽丝掉进树洞一般，而如果开门前没有听到，估计是我做错了什么，需要提前做好挨揍的准备。我的许多音乐的来源在智能手机出现之前都是来自于家里CD所播放的音乐，还有一部分来自于《猫和老鼠》中的交响乐（哈）。 var ap = new APlayer({ element: document.getElementById(\"aplayer-AeQOJfwo\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"Tom and Jerry\", author: \"Bradley\", url: \"http://music.163.com/song/media/outer/url?id=25962464.mp3\", pic: \"https://i.loli.net/2021/04/08/UwXvYIDgdoznLMi.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 前智能手机在智能手机之前其实还有一个小小的时代，我叫做前智能时代，印象最深的便是诺基亚的5230型号，有着如今智能手机基本的功能，但是操作起来并不是那么顺畅，屏幕是电容屏，需要用手指戳下去才能响应，也有了那个时候的特色就是触控笔。 但当时可以将音乐随身放在一个手机里已经让我非常震撼了，当时传输的方式主要是用线连接电脑后传输，或者用蓝牙传输，蓝牙在那个时候可谓称得上是真正的黑科技，在电脑上选择文件，选择蓝牙传输到手机，那时候音乐的文件，大多数是acc或者mp3的文件，256k的音质，蓝牙的传输速率那时大约200k左右，传一张专辑的歌曲还是需要一点点耐心的。 诺基亚5230陪伴了我小学期间每天放学从学校到家里的一小段路，那时候也是网络歌手充斥网络的时代，和现在不同，那时候的网络歌手并没有一个完整的团队，很多时候只有自己录制自己唱歌就发到网上去了，虽然质量比不上如今的，但是很多经典的歌曲还是留了下来。尤其是经典的网恋歌曲…. var ap = new APlayer({ element: document.getElementById(\"aplayer-wzzHaeHt\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"爱到花开\", author: \"戊道子\", url: \"http://music.163.com/song/media/outer/url?id=5244681.mp3\", pic: \"https://i.loli.net/2021/04/08/jMLB9rwEWPbCF48.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 我印象里在小学三四年级天天回家听的就是这首可谓是网恋元祖歌曲哈哈哈哈，以至于在很长一段时间内听到这首歌的前奏都有点起鸡皮疙瘩的感觉….. 智能手机时代在初一的时候我真正的迎来了我的第一台智能手机，那便是大名鼎鼎(以前)的台湾手机厂商HTC(火腿肠)的Incredible S，出厂预装的是安卓2.2. 第一个下载的软件除了QQ便是QQ音乐了，还记得第一次打开QQ音乐，主页上扑面而来的帅气男人，那肯定就是周董了 var ap = new APlayer({ element: document.getElementById(\"aplayer-mYiTVRfW\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"说好的幸福呢\", author: \"周杰伦\", url: \"https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBcXVhc1dPM0p5SlZpQ2QybDFCemlqa01hc2Y1P2U9MjFSb0Jy.mp3\", pic: \"https://i.loli.net/2021/04/08/aILZKwO18o92p3T.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); var ap = new APlayer({ element: document.getElementById(\"aplayer-OIoPuUBP\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"花海\", author: \"周杰伦\", url: \"https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBcXVhc1dPM0p5SlZpQ2FOQ3NKNWJKZU4tbnhLP2U9MnppMnFk.mp3\", pic: \"https://i.loli.net/2021/04/08/aILZKwO18o92p3T.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); var ap = new APlayer({ element: document.getElementById(\"aplayer-qstzuSHF\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"给我一首歌的时间\", author: \"周杰伦\", url: \"https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBcXVhc1dPM0p5SlZpQ2dURkxjMWNVczZ1STA5P2U9WkxyZkp6.mp3\", pic: \"https://i.loli.net/2021/04/08/aILZKwO18o92p3T.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 也是在听过周董的歌之后，我对于自己所喜欢的音乐才有了一个初步的理解，那时的我喜欢干净的音乐，在歌曲里各种乐器的位置摆放合理，不会互相打架，用尽可能少的乐器演绎出丰富的听觉效果，而在那个时候，听得最多的除了周董，便是李荣浩了。 第一次认识李荣浩是在电台里，在FM102.2深夜12点开始的节目叫做《千里共良宵》，某一次广告前的过场音乐直接抓住了我的耳朵，13年的听歌识曲并不完善，我只能尽可能的记住歌词，然后再去搜索，那时候我印象最深的一句便是“越勇敢越孤单”，这一句便让我认识了李荣浩。 var ap = new APlayer({ element: document.getElementById(\"aplayer-vAqXcJDJ\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"都一样\", author: \"李荣浩\", url: \"http://music.163.com/song/media/outer/url?id=27731172.mp3\", pic: \"https://i.loli.net/2021/04/08/X6V1nOjuELw3pSF.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 那段时间向身边的同学推荐李荣浩，他们的表情就像李荣浩的眼睛一样，眯成了一条缝，那个时候没有抖音，大家听歌还是有耐心听完一整首的，大家所喜欢的风格也不同，但李荣浩在那个时候可谓时流行音乐的一个异类，前有R&amp;B教父陶喆、周董还有陈奕迅三座大山，那时候很多人说李荣浩是周杰伦加陈奕迅，也有人说李荣浩的音乐千篇一律，但是李荣浩确实闯出了一条路来。 var ap = new APlayer({ element: document.getElementById(\"aplayer-JKPOAQJv\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"不搭\", author: \"李荣浩\", url: \"http://music.163.com/song/media/outer/url?id=29764563.mp3\", pic: \"https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/14ce36d3d539b6009f46967be350352ac75cb776.jpeg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 李荣浩最厉害的对于和声的运用，这与他多年的幕后经验是紧密相关的，许多歌曲旋律并不复杂但和声的运用使得歌曲增彩不少。 吉他在初三中考完的假期内我拥有了我的第一把吉他，也就是这个时候我开始真正的不仅仅去听音乐，更想要去触碰音乐。 var ap = new APlayer({ element: document.getElementById(\"aplayer-NyssREHP\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"拥抱\", author: \"五月天\", url: \"http://music.163.com/song/media/outer/url?id=386542.mp3\", pic: \"https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/a8014c086e061d95bcc46a0c79f40ad162d9ca00.jpeg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 五月天的拥抱是我学习的第一首歌曲，当时是一位朋友的朋友在唱吧上唱了这一首并且分享给了我，当时第一次听到我便下定决心要学会这一首拥抱，第二天打开吉他教材，噢～好家伙，第一页就是这首歌的谱子，也就是在这样的机缘巧合下我慢慢开始学习一首又一首的歌，我也开始接触指弹。 var ap = new APlayer({ element: document.getElementById(\"aplayer-WmZTktlq\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"LOVIN' YOU\", author: \"押尾コータロー\", url: \"http://music.163.com/song/media/outer/url?id=22822506.mp3\", pic: \"https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/s4716396.jpeg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 押尾桑的许多歌曲都可谓是吉他指弹入门的必练曲，到并不是因为多简单，而是因为实在是太好听了，虽然许多人都认为押尾的歌曲的难度稍低，但是如果想要完整流畅地弹奏下来还是需要多年的苦练的。而上面这一首LOVIN’ YOU则是我第一首学会弹奏的指弹曲，直到现在我也不敢说我已经可以完全无压力地弹奏下来了，每一次弹奏都为这精致的编排所震撼。 在押尾桑后我开始了解更多来自世界各地的指弹大师，首先当然是来自澳洲的Tommy Emmanuel，还记得第一次听到close to you的弹奏时，我根本不相信这是一把吉他所能创造的效果，各种技巧和和弦都是为了旋律服务的感觉实在是太棒了。也让我对吉他的理解更加的深刻。 var ap = new APlayer({ element: document.getElementById(\"aplayer-onRCOAzz\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"Since We Met\", author: \"Tommy Emmanuel\", url: \"http://music.163.com/song/media/outer/url?id=2002030.mp3\", pic: \"https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/s3681710.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 当然除了Tommy Emmanuel我还尤其喜欢来自日本的伍伍慧，他极具天赋的编曲以及各种古典技巧的融合使得他的曲子听起来尤其的活泼以及有生气，他所改编的爵士名曲Moon River不仅仅尤其地温暖，而且其中的改编更让人如痴如醉。 var ap = new APlayer({ element: document.getElementById(\"aplayer-fRcVjVGR\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"Moon River\", author: \"伍伍慧\", url: \"http://music.163.com/song/media/outer/url?id=26450089.mp3\", pic: \"https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/s27996751.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 方大同终于在高中，我开始认识方大同。 var ap = new APlayer({ element: document.getElementById(\"aplayer-dNmzrhHr\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"红豆\", author: \"方大同\", url: \"https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBcXVhc1dPM0p5SlZpRExFLUlUeWhhZVd4VTJ6P2U9WmIxVGJj.mp3\", pic: \"https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/9825bc315c6034a82b7f9283c313495409237616.jpeg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 在秋游前的一晚，在某个狭小的双人ktv中，我第一次听到红豆的吉他前奏，歌曲开始，她开始唱歌，我静静地听着。 “有时候 有时候 我会相信一切有尽头 相聚离开都有时候 没有什么会永垂不朽 可是我 有时候 宁愿选择留恋不放手 等到风景都看透 也许你会陪我看细水长流 ” 等到第二段主歌开始，她打开原唱，我们就这样一边静静听着方大同唱歌，一边笑着说怎么这个人唱歌那么多转音。 那天晚上是我第一次认真听方大同的歌，回到宿舍我马上去向朋友借了一把吉他，开始弹奏方大同的红豆。也是第一次我从心底感觉原来弹唱也可以这么酷，吉他的编排可以如此抓耳朵。我一直弹一直弹，我舍友久违地说了一句：真好听啊。在那个时候我知道方大同这个男人以后应该会陪我很久很久了。 第二天在秋游的路上我也一直在耳机里不断地循环，回来的路上也是。 第二天开始我开始听方大同的其他歌曲，刚开始这并不是一个很顺畅的过程，以往的流行歌曲经验对于大同的歌曲来说并不管用，无论是旋律，和声，和弦，对于我来说都完全是崭新的，我还记得第一次听《暖》，并不觉得这首歌是我的菜，直到两天后第二次听，才发现，噢！太棒了！ var ap = new APlayer({ element: document.getElementById(\"aplayer-WDYMLCCe\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"暖\", author: \"方大同\", url: \"https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBcXVhc1dPM0p5SlZpRGczODdkX3ZRSkdURk9FP2U9RGJTeTNh.mp3\", pic: \"https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/9825bc315c6034a82b7f9283c313495409237616.jpeg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 大同的许多歌曲都是如此，有着难以言喻的前瞻性，让你在每一次重播时都觉得，这首歌太潮了！ 也是因为大同，我对于音乐的理解更加深入，大同的许多音乐灵感其实是来自于他小时候所听的黑人音乐，爵士乐，放克，还有各种灵魂乐，布鲁斯以及R&amp;B。也使得他的歌曲不仅仅多元，而且极具创造性，各种即兴信手拈来。 也是在那个时候开始我开始收集方大同的专辑，像让大同的声音在音响上呈现，我第一张真正意义上的方大同发行专辑便是《橙月》。 var ap = new APlayer({ element: document.getElementById(\"aplayer-PuDojjmN\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"小小虫\", author: \"方大同\", url: \"https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBcXVhc1dPM0p5SlZpRGJtNVZqbUtKSUQxaXRZP2U9akJGbTc5.mp3\", pic: \"https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/9d82d158ccbf6c81d15b405dbc3eb13533fa4012.jpeg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 随着听大同的歌曲越来越来，我发现我的耳朵也变刁了，尤其是听到流行歌曲的时候，不自主地会与大同的歌曲进行比较，如果这首歌是完完全全在套路之内的，那我大可能就把这首歌给pass掉，但如果有意料之外的旋律或者和弦就会马上吸引到我。 疫情疫情期间我开始花大量的时间去听歌，一天的时间都泡在音乐App中，但巧合的是，在某一个晚上我打开YouTube，首页给我推荐了一张合辑，名字叫做睡前R&amp;B，封面是昏暗的房间，地上摆放着各种唱片，点击，便让我发现了这一位宝藏歌手。 var ap = new APlayer({ element: document.getElementById(\"aplayer-cWgByUHo\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"easy\", author: \"Mac Ayres\", url: \"http://music.163.com/song/media/outer/url?id=519943092.mp3\", pic: \"https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/s29520620.jpeg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 许多人评价Mac Ayres是如今被远远低估的R&amp;B歌手，我也很赞同，但他才23岁，未来可期。 这首歌还在被我用在了歌手大赛的复赛中（由于英语发音根本不标准被评委吐槽，但如果叫我评选2020年我的年度单曲，我会毫不犹豫地选择这首歌） 在疫情中我还认识了另外一位“老师”，那便是来自台湾的“李友廷老师”了 李友廷以极强的吉他演奏能力和极具个人风格的作品在台湾的综艺节目声林之王第一季夺得冠军，并在2020年底终于推出了首张个人专辑《如果你也爱我就好了》，听就好了。 var ap = new APlayer({ element: document.getElementById(\"aplayer-zYceOrpe\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"直到我遇见了你\", author: \"李友廷\", url: \"https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBcXVhc1dPM0p5SlZpRHJhdE03a29iQ0Q0RWNMP2U9S25JWURG.mp3\", pic: \"https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/s33763909.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 本月推荐歌单 @ @@ @@@ @@@@ @@@@@ @@@@@@ @@@@@@@ @@@@@@@@ @@@@@@@@@ 彩蛋谢谢你的阅读 致敬那些漫漫长夜 谢谢ni。 2021.4.11 var ap = new APlayer({ element: document.getElementById(\"aplayer-WDTjCHpJ\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"心酸\", author: \"2017.12.24\", url: \"https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBcXVhc1dPM0p5SlZpRHVDTkFXbndSbTY4THFOP2U9bTNGNnlu.m4a\", pic: \"\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[{"name":"音乐分享","slug":"音乐分享","permalink":"http://laixinly.top/categories/%E9%9F%B3%E4%B9%90%E5%88%86%E4%BA%AB/"}],"tags":[{"name":"音乐","slug":"音乐","permalink":"http://laixinly.top/tags/%E9%9F%B3%E4%B9%90/"}],"author":"Hamster"},{"title":"在openwrt上使用DDNSTO插件进行远程管理","slug":"DDNSTO","date":"2021-04-04T16:00:00.000Z","updated":"2021-04-05T14:42:19.406Z","comments":true,"path":"2021/04/05/DDNSTO/","link":"","permalink":"http://laixinly.top/2021/04/05/DDNSTO/","excerpt":"","text":"在openwrt上使用DDNSTO插件进行远程管理DDNSTO有付费与免费两种模式选择，免费套餐需要每隔7天手动进行一次续期 前言openwrt是目前众多路由器刷机的选择，界面美观而且插件丰富，但是有一定的上手成本，远程管理路由器在openwrt上的配置并不简单，ddnsto的出现大大降低了新手的使用成本，使用体验也十分友好。 使用教程本插件理论上适用于任何基于openwrt的原版或者第三方路由器 本文使用LEDE固件进行演示 安装DDNSTO插件从网站中下载对应架构版本的ipk文件 https://firmware.koolshare.cn/binary/ddnsto/openwrt/ 在openwrt路由器后台管理界面中安装插件 使用文件传输功能将.ipk文件上传至/tmp/upload/ 上传成功后跳转至软件包页面 在下载并安装软件包输入框中输入/tmp/upload/对应的名字.ipk等待安装完成 在服务中看到DDNS.to内网穿透一栏就证明安装成功了 配置DDNSTO打开https://www.ddnsto.com点击右上角登录后台并使用微信注册 复制页面上的令牌 回到路由器页面打开DDNS.to插件页面在令牌框内将复制的令牌粘贴并勾选启用，点击页面的保存&amp;应用 稍等片刻回到DDNSTO后台，你的路由器应该就会出现在页面中。 点击添加域名映射，输入你喜欢的名字并将路由器的内网地址填入并保存。 使用DDNSTO一切配置完成后应该如图一样 点击给出的域名，如果可以正确跳转至路由器管理页面，恭喜你已经可以正常使用啰！SEE YOU NEXT TIME！","categories":[{"name":"openwrt","slug":"openwrt","permalink":"http://laixinly.top/categories/openwrt/"}],"tags":[{"name":"openwrt","slug":"openwrt","permalink":"http://laixinly.top/tags/openwrt/"},{"name":"内网穿透","slug":"内网穿透","permalink":"http://laixinly.top/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"}],"author":"Hamster"},{"title":"利用python写一个自动获取局域网ip地址并开启SS服务器的小工具","slug":"校园网SS服务器","date":"2021-03-30T02:29:32.648Z","updated":"2021-04-15T02:15:24.232Z","comments":true,"path":"2021/03/30/校园网SS服务器/","link":"","permalink":"http://laixinly.top/2021/03/30/%E6%A0%A1%E5%9B%AD%E7%BD%91SS%E6%9C%8D%E5%8A%A1%E5%99%A8/","excerpt":"","text":"前言​ 这个学年学校把宽带运营商从之前的联通大哥哥换成了如今的电信小弟弟，使用体验可谓一落千丈，最主要的原因是电信不再像联通提供拨号上网的账号和密码，改成了强制使用天翼校园的程序来进行认证上网，而且限制只能一台设备在线，这直接搞垮了宿舍内的一堆需要联网的设备，首先想到的是通过电脑先连接在共享给路由器，感谢这位兄弟提供的方法@task138，但是转念一想，既然学校内覆盖了校园网，那是否可以使用电脑搭建服务器从而达到在校园网范围内手机或者iPad都可以上网呢?这就是今天讨论的方法。 此方法仅限交流，请勿在保密场所使用 目前仅适用于Windows 源码: https://github.com/hamster1963/-SS- 实现效果 自动获取本机局域网地址并写入配置文件 自动获取本机局域网地址并写入配置文件 开启时显示各项配置参数，帮助使用者配置代理软件 开启SS代理服务器，出错时显示错误弹窗 原理与改进开启SS代理服务器部分参考了GitHub上的shadowsocks-libqss项目，需要使用者手动填写config文件，使用起来学习成本有一点高，且如果没有成功运行也没有错误提示，所以使用python编写一个小脚本改进一下，以达到上述的功能。 使用方法windows开启服务器想开启SS代理服务器十分简单，如果不想更改默认的端口、密码、加密方式，可以直接双击使用开启SS代理服务器.exe，打开后根据弹窗配置自己的代理软件，安卓小飞机，苹果小火箭，windows使用clash，macOS使用surge。 一切顺利后应该是这样的界面 ios使用小火箭连接在小火箭中点击右上角加号，类型选择Shadowsocks，根据配置弹窗中的信息，填入相关配置，混淆与插件为空。如图: macos使用surge连接打开surge面板，在策略中选择添加 填入配置信息，出站选择全局代理即可 surge教程到此结束 程序编写我们的目标其实很简单，就是获取当前IP地址并且写入到config文件中，并在启动服务器时有弹窗包含主要配置信息提醒用户。 获取ip地址这是一个很通用的获取本机局域网ip地址的方法，代码如下: #获取实时IP地址 def get_host_ip(): &quot;&quot;&quot; 查询本机ip地址 :return: ip &quot;&quot;&quot; try: s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) s.connect((&#39;8.8.8.8&#39;, 80)) ip = s.getsockname()[0] finally: s.close() return ip 将ip地址写入配置文件配置文件的类型是json，在python中我们可以很轻松地修改json文件内的值，只需要知道key和value的对应关系即可，代码如下: #将IP地址写入json文件 filename = &#39;config.json&#39; with open(filename, &#39;r&#39;) as f: data = json.load(f) data[&#39;server&#39;] = get_host_ip() # &lt;--- 添加实时ip地址. os.remove(filename) with open(filename, &#39;w&#39;) as f: json.dump(data, f, indent=4) 由于上面的 get_host_ip()是直接返还ip地址的，所以在server的value部分我们直接使用get_host_ip()即可。 读取基础配置信息在开屏弹窗中我们需要显示基本信息，所以我们先需要读取json文件内的我们需要的value值，代码如下: #读取json 获取端口/密码/加密方式 filename = &#39;config.json&#39; with open(filename, &#39;r&#39;) as f: data = json.load(f) a = data[&#39;password&#39;] b = data[&#39;server_port&#39;] c = data[&#39;method&#39;] 弹窗弹窗使用的是tkinter库，语法也十分简单，代码如下: def talk(): tkinter.messagebox.showinfo(&quot;提示&quot;,&quot;你的ip地址是&quot; + get_host_ip()+&quot;\\n你的端口号是&quot;+str(b)+&quot;\\n你的密码是&quot; + a + &quot;\\n加密方式是&quot;+ c +&quot;\\n请勿关闭cmd窗口&quot;) 实现界面如图 主程序基本的小组件都写好了我们最后就把积木拼成小车车🚗就可以了,加入检测是否运行成功的弹窗，代码如下: #主程序 netopen = threading.Thread(target=runserver)#, daemon=True) if __name__==&#39;__main__&#39;: netopen.start() if netopen.is_alive() == True: #弹窗显示 talk() tkinter.messagebox.showinfo(&quot;欢迎&quot;,&quot;开启成功,如需退出请关闭cmd窗口&quot;) if netopen.is_alive() == False: tkinter.messagebox.showinfo(&quot;退出&quot;,&quot;服务已退出，请检查配置&quot;) 由于我们是调用了外部的程序，所以这里使用线程监控来实现检测服务器程序是否正确运行。 大功告成完整源码如下 import json import os import socket import tkinter import tkinter.messagebox from threading import Thread import threading #初始化弹窗 root = tkinter.Tk() root.withdraw() root.wm_attributes(&#39;-topmost&#39;,1) #获取实时IP地址 def get_host_ip(): &quot;&quot;&quot; 查询本机ip地址 :return: ip &quot;&quot;&quot; try: s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) s.connect((&#39;8.8.8.8&#39;, 80)) ip = s.getsockname()[0] finally: s.close() return ip #将IP地址写入json文件 filename = &#39;config.json&#39; with open(filename, &#39;r&#39;) as f: data = json.load(f) data[&#39;server&#39;] = get_host_ip() # &lt;--- 添加实时ip地址. os.remove(filename) with open(filename, &#39;w&#39;) as f: json.dump(data, f, indent=4) #读取json 获取端口/密码/加密方式 filename = &#39;config.json&#39; with open(filename, &#39;r&#39;) as f: data = json.load(f) a = data[&#39;password&#39;] b = data[&#39;server_port&#39;] c = data[&#39;method&#39;] def runserver(): os.system(&#39;shadowsocks-server.bat&#39;) def talk(): tkinter.messagebox.showinfo(&quot;提示&quot;,&quot;你的ip地址是&quot; + get_host_ip()+&quot;\\n你的端口号是&quot;+str(b)+&quot;\\n你的密码是&quot; + a + &quot;\\n加密方式是&quot;+ c +&quot;\\n请勿关闭cmd窗口&quot;) #主程序 netopen = threading.Thread(target=runserver)#, daemon=True) if __name__==&#39;__main__&#39;: netopen.start() if netopen.is_alive() == True: #弹窗显示 talk() tkinter.messagebox.showinfo(&quot;欢迎&quot;,&quot;开启成功,如需退出请关闭cmd窗口&quot;) if netopen.is_alive() == False: tkinter.messagebox.showinfo(&quot;退出&quot;,&quot;服务已退出，请检查配置&quot;) 逻辑还是比较简单的，基本就是在调用不同的组件，但是成品还是很不错的，大大降低了学习和使用成本。 最后想说的话这个方法对于校园网来说只能算是另辟蹊径，并没有完全从根本上解决问题，如果天翼校园的客户端能写得好一点，连接设备数能放宽一点，想必会受到更多学生的接纳。see you next time！欢迎评论！","categories":[{"name":"python开发","slug":"python开发","permalink":"http://laixinly.top/categories/python%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"python","slug":"python","permalink":"http://laixinly.top/tags/python/"},{"name":"服务器","slug":"服务器","permalink":"http://laixinly.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"SS","slug":"SS","permalink":"http://laixinly.top/tags/SS/"},{"name":"校园网","slug":"校园网","permalink":"http://laixinly.top/tags/%E6%A0%A1%E5%9B%AD%E7%BD%91/"},{"name":"网络","slug":"网络","permalink":"http://laixinly.top/tags/%E7%BD%91%E7%BB%9C/"}],"author":"Hamster"},{"title":"在搭载M1芯片的mac上使用face_recognition库实现实时人脸识别小demo","slug":"M1 人脸识别","date":"2021-03-27T14:47:55.207Z","updated":"2021-03-31T16:41:14.247Z","comments":true,"path":"2021/03/27/M1 人脸识别/","link":"","permalink":"http://laixinly.top/2021/03/27/M1%20%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/","excerpt":"","text":"前言​ 在搭载M1芯片的mac上顺利进行开发是一件不仅随缘而且需要人品的事情，不仅仅因为M1芯片的ARM架构所带来的编译方式的不同，bugsur新的文件路径系统以及时不时的抽风也使得顺利开发的路上艰难险阻。今天就来看看GitHub上大名鼎鼎的开源人脸库face_recognition如何比较顺利地在M1上跑起来且实现简单的实时人脸识别的功能。 由于不可描述的原因，网络环境所造成的安装失败不在本文讨论范围中。 第一部分 关于环境的那点事网络环境搭建建议进行设置省去不必要的麻烦 大部分的环境搭建与库安装需要使用终端进行，由于终端默认并不走代理的网络， 为了此后下载的顺利，先需要设置终端也可以使用代理。 首先，在当前用户根目录新建一个文件名为 .bash_profile的空白文本「. 开头文件为隐藏文件」，然后输入以下代码： function proxy_off()&#123; unset http_proxy unset https_proxy unset ftp_proxy unset rsync_proxy echo -e &quot;已关闭代理&quot; &#125; function proxy_on() &#123; export no_proxy=&quot;localhost,127.0.0.1,localaddress,.localdomain.com&quot; export http_proxy=&quot;http://127.0.0.1:1087&quot; export https_proxy=$http_proxy export ftp_proxy=$http_proxy export rsync_proxy=$http_proxy export HTTP_PROXY=$http_proxy export HTTPS_PROXY=$http_proxy export FTP_PROXY=$http_proxy export RSYNC_PROXY=$http_proxy echo -e &quot;已开启代理&quot; &#125; 在export no_proxy与export http_proxy填入对应的本地代理服务器地址以及端口 可以在你的代理软件中查看 将文件配置好并放在用户根目录后 当让终端走代理的时候，输入：source ~/.bash_profile proxy_on 想关闭代理的时候，输入：proxy_off 此为一次性设置，关闭终端后失效 基本环境搭建安装python最新版本从python官网下载最新版本python 记得选中 macOS 64-bit universal2 installer https://www.python.org/downloads/mac-osx/ 安装完成后在终端输入 open ~/.bash_profile 在文件中加上一行环境变量配置后保存退出 export PATH=/usr/local/bin:$PATH 重新打开终端输入 source ~/.bash_profile python3 --version -------注意是python3 顺利的话你会在终端中看到python的版本号信息，python安装到此结束 各种依赖包安装头铁的可以试试直接安装 设置好终端网络代理后 在终端中输入 pip3 install face_recognition 在安装face_recognition之前我们需要安装 homebrew miniforge numpy openblas opencv cmake dlib 安装homebrew唯一的重点是配置环境变量 下载安装过程略 安装完成后根据提示在终端中输入 open ~/ .zprofile 在文件中加入 eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot; 保存后重启homebrew，在终端中输入 brew 如果出现各种指令提示，证明安装成功 安装miniforge鉴于M1版本的开发工具适配进程目前并不同步，所以这里使用miniforge来进行库管理 在网站中选择Apple Silicon版本下载，下载后直接运行即可 接下来我们需要在终端中激活 conda create -n myenv python=3.9 //创建名为myenv，python版本为3.9的环境 conda activate myenv //激活环境 安装numpy激活conda且配置好网络代理后可以直接在终端中输入 pip3 install numpy=1.9.14 等待下载安装，安装完成后检测是否安装成功，在终端中输入 python3 &gt;&gt;&gt;import numpy 没报错的话就安装成功了 安装openblas激活conda且配置好网络代理后可以直接在终端中输入 pip3 install openblas 等待下载安装，安装完成后检测是否安装成功，在终端中输入 python3 &gt;&gt;&gt;import openblas 没报错安装成功 需要编译的库 opencv cmake dlib 这三个包如果安装失败，可以多试几次，cmake有概率编译失败 安装opencv点击链接下载opencv库，仅适用于M1芯片 opencv_contrib_python-4.5.0+bbaa777-cp39-cp39-macosx_11_0_arm64.whl 在终端中激活环境 conda activate myenv //激活环境 定位到下载目录并安装 cd 目录 pip3 install opencv_contrib_python-4.5.0+bbaa777-cp39-cp39-macosx_11_0_arm64.whl 等待安装即可 安装cmake终端配置好网络代理后输入 brew install cmake //安装cmake 安装Dlib激活conda且配置好网络代理后直接在终端中输入 pip3 install dlib 安装后在终端输入 python3 &gt;&gt;&gt;import dlib 如果未报错恭喜你安装成功，我们就差最后一步了 对着检查一下吧 homebrew miniforge numpy openblas opencv cmake dlib 安装face_recognition激活conda且配置好网络代理后直接在终端中输入 pip3 install face_recognition 如果出现了任何错误，欢迎在评论区告诉我 此过程需要网络以及人品双buff叠加，请坐和放宽…… 安装完成后在终端中输入 python3 &gt;&gt;&gt;import face_recognition 如果没有报错证明万里长征我们已经走了一半了。 也可以使用 pip3 list 命令来查看所有已经安装的库 如图 到此安装告一段落 第二部分 开始造轮子吧由于安装这些依赖和库可能已经损耗你的大部分精力了， 所以接下来我们就快速地来看看怎么把这个简单的实时人脸识别跑起来吧。 摄像头是必须的，所以不要关上盖子运行接下来的步骤 下载py文件从GitHub上下载 facerec_from_webcam_faster.py 使用编辑器编辑用你喜欢的编辑器打开，这里使用vscode示范，下面代码都是从源文件中截出，对应修改即可。 # Load a sample picture and learn how to recognize it. 图片人名1_image = face_recognition.load_image_file(&quot;把这里改成你要识别的图片的路径&quot;) 图片人名1_face_encoding = face_recognition.face_encodings(图片人名1_image)[0] # Load a second sample picture and learn how to recognize it. 图片人名2_image = face_recognition.load_image_file(&quot;把这里改成你要识别的图片2的路径&quot;) 图片人名2_face_encoding = face_recognition.face_encodings(图片人名1_image)[0] # Create arrays of known face encodings and their names known_face_encodings = [ 图片人名1_face_encoding, 图片人名2_face_encoding ] known_face_names = [ &quot;图片1所对应的全名&quot;, &quot;图片2所对应的全名&quot; ] 例子如图，图片1为Obama，图片2为biden 运行一下吧！打开终端，输入 python3 &lt;将文件拖到这里或者粘贴文件的路径&gt; 就像这样 按下回车等待奇迹的发生 不出意外的话，掏出你的小手机拿出一张照片或者把你的脸对准摄像头，就可以看到 大功告成啦！尾巴总体来说跑起这个小项目还是基本没有难度的，最主要的是有稳定的网络以及足够的耐心 face_recognition这个库具有很多方向的应用，今天只是简单地入门一下，还有很多玩法可以发掘哦！ 谢谢阅读，欢迎你的留言！","categories":[{"name":"python开发","slug":"python开发","permalink":"http://laixinly.top/categories/python%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"python","slug":"python","permalink":"http://laixinly.top/tags/python/"},{"name":"macOS","slug":"macOS","permalink":"http://laixinly.top/tags/macOS/"},{"name":"M1","slug":"M1","permalink":"http://laixinly.top/tags/M1/"},{"name":"face_recognition","slug":"face-recognition","permalink":"http://laixinly.top/tags/face-recognition/"},{"name":"人脸识别","slug":"人脸识别","permalink":"http://laixinly.top/tags/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"}],"author":"Hamster"}],"categories":[{"name":"音乐分享","slug":"音乐分享","permalink":"http://laixinly.top/categories/%E9%9F%B3%E4%B9%90%E5%88%86%E4%BA%AB/"},{"name":"openwrt","slug":"openwrt","permalink":"http://laixinly.top/categories/openwrt/"},{"name":"python开发","slug":"python开发","permalink":"http://laixinly.top/categories/python%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"音乐","slug":"音乐","permalink":"http://laixinly.top/tags/%E9%9F%B3%E4%B9%90/"},{"name":"openwrt","slug":"openwrt","permalink":"http://laixinly.top/tags/openwrt/"},{"name":"内网穿透","slug":"内网穿透","permalink":"http://laixinly.top/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"},{"name":"python","slug":"python","permalink":"http://laixinly.top/tags/python/"},{"name":"服务器","slug":"服务器","permalink":"http://laixinly.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"SS","slug":"SS","permalink":"http://laixinly.top/tags/SS/"},{"name":"校园网","slug":"校园网","permalink":"http://laixinly.top/tags/%E6%A0%A1%E5%9B%AD%E7%BD%91/"},{"name":"网络","slug":"网络","permalink":"http://laixinly.top/tags/%E7%BD%91%E7%BB%9C/"},{"name":"macOS","slug":"macOS","permalink":"http://laixinly.top/tags/macOS/"},{"name":"M1","slug":"M1","permalink":"http://laixinly.top/tags/M1/"},{"name":"face_recognition","slug":"face-recognition","permalink":"http://laixinly.top/tags/face-recognition/"},{"name":"人脸识别","slug":"人脸识别","permalink":"http://laixinly.top/tags/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"}]}