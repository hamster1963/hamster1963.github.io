<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>生日快乐</title>
      <link href="2022/10/30/Happy%20Birthday/"/>
      <url>2022/10/30/Happy%20Birthday/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一个小小的信"><a href="#一个小小的信" class="headerlink" title="一个小小的信"></a>一个小小的信</h1><p><img src="http://120.24.211.49/20221102005613.png"></p><h3 id="178天快乐"><a href="#178天快乐" class="headerlink" title="178天快乐"></a>178天快乐</h3><p>说起来好像一眨眼，就从那个湖边的小鸭子的记忆一下子就跳转到今天的可可爱爱的我们。</p><h3 id="2022-2-14"><a href="#2022-2-14" class="headerlink" title="2022.2.14"></a>2022.2.14</h3><p><img src="http://120.24.211.49/20221102005745.png" alt="paint.jpg"></p><h3 id="2022-3-19"><a href="#2022-3-19" class="headerlink" title="2022.3.19"></a>2022.3.19</h3><p><img src="http://120.24.211.49/20221102005812.png" alt="duck.jpeg"></p><h3 id="2022-5-7"><a href="#2022-5-7" class="headerlink" title="2022.5.7"></a>2022.5.7</h3><p><img src="http://120.24.211.49/20221102005834.png" alt="first.jpeg"></p><h3 id="2022-7-31"><a href="#2022-7-31" class="headerlink" title="2022.7.31"></a>2022.7.31</h3><p><img src="http://120.24.211.49/WechatIMG42.jpeg" alt="ours.jpeg"></p><h3 id="2022-8-27"><a href="#2022-8-27" class="headerlink" title="2022.8.27"></a>2022.8.27</h3><p><img src="http://120.24.211.49/20221102005904.png" alt="sel.jpeg"></p><p>是我，喜欢了很久的女孩呢.</p><h3 id="2021-7-12"><a href="#2021-7-12" class="headerlink" title="2021.7.12"></a>2021.7.12</h3><p><img src="http://120.24.211.49/20221102005915.png" alt="her.jpeg"></p>        <div id="aplayer-efFDVWBR" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-efFDVWBR"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "LOVE",              author: "LittleDog",              url: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/musicstore/Love.m4a",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h2 id="生日快乐，yuyu，平安喜乐，岁岁平安"><a href="#生日快乐，yuyu，平安喜乐，岁岁平安" class="headerlink" title="生日快乐，yuyu，平安喜乐，岁岁平安"></a>生日快乐，yuyu，平安喜乐，岁岁平安</h2>]]></content>
      
      
      <categories>
          
          <category> YUYU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yuyu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>想怎样</title>
      <link href="2022/06/22/%E6%83%B3%E6%80%8E%E6%A0%B7/"/>
      <url>2022/06/22/%E6%83%B3%E6%80%8E%E6%A0%B7/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a311dcc5f4480816bc71a18a6aa07f414e2770cf51feaa112c09841ed2d8ad2b">8b27e0094abfe1a4081fbfd52f0fbcd80b66af6d4ba8e72beb2147e5ab3a1ae2c31d08eca945961dd74485148a79029c4433ffb40824017393ecf32c341adb0a671ad2f896cc410f660f0b5f0f45472cf1d3fd9bc7d12343bd0edef0e9c649cd95ba79b8c36f705e995db04ebc04ba4743a0a9cd741887b45a253724aa02af1be59c63c5c7620d0bdfc2b7ae8538e7bee22b0155e666a0013ff4fa79ab7cbf9b7cac11199ee6a5cb015c6b9fc6c9a1da4e1f8fa90ee51a90cd009b037fd31001c3e96ef49407831553ced14aea7a6b2c54a986566b76325a0f844fd6c527076ef5538672fcaecd5ae87e5d3be192588d47e380109c31f4a7f23a5818a056db391954df7925be417a8ed44508ab9a99d289d5495eba70d6cc3612fb820c2fd4a4b42768535222be9dc482adfa8207faaba81a4fd604991ecb767756ade83cab08d3e7945d455c1dab32882c55c306736d524a1c47ebf7d76d5f8b0b3e2ada3d6d841cff87204c105716cc091ee48d41636843835bdb9a7aadc0145d0356e0d5368438bc964878a0cdde66879fba14d35898f5e73c78f89d5106bca4a5946d348ea2ca35d488423aba4cbd6936a04299b78e948eaee51f667561fe1991bf0055740fcd41487ec205e15b5ae0d94385ec28b2094a2fd24bdef472dfad6206843ba1076a4ec73dae43546466ff6fdccd769f95a0e0b13fb51f22fd46795776830233ace6b2c0df4f592be82be26f2032c90cf174695f6d5b598a1d0a20ec87b1c1335f2893caa09a88e6adc1d9cb1f6b6167134b95555d2776b00ed9bfc964e35ea113f0a3eb243b0bb620e7ff22cf2554c2921d09ba81d46cdffa846323ffcf594828229f925e8865ed186c7357a9121f6f35d4dcfc9770f3e6269ff87293efaeddb8d94ee00c3db9a85ea064e9d440c9062afbeab3e527e5220719848a9818c7c91378366ac79d03aefd6eccb732928e64cd46283e83a31e6ac56545c2dc5e51c9681f2df5778e5fb76c2e8a9cfec22bac4f433f312c620480134a298aed6217d3ae84d49484068e491b19f28fba4838fa53cafa7450d91339428d70bbbcb76887402f2c3327ccea2c1a2b8183d0756d64be345bca68ea6f94b450b59f51e7d4319def303ccfefd34fbb132ee84c2e255310838fb1a74348a535b6d75f3e897811a51feba0fbfeb92843a8ceb1a9e81e04d0516d7dbd9ad9ef3692f686b3cefa1b5d7534ad3738350fae14eb574930ac7c564aeb784e28198cadffcf0c2bfc892bb18d6b23cd936d2b8ff9ff8e185a46ffeae4045d53ccdacbbfc28c5f56ad3fb9b1a969be07c67c1e51bd6d64a5ce928b903274c7473846e9860a9a08877e716d66dc8036889820c0487c5be631bd745ef627f5f51d9356e6d457da4d7e2f8602ae2e2f48ff9ea4eb2c2c8db53487ba992e8f70211ab3467c456dcec93811a903b4e468e23d3b3efb94de35424e48caac9835cbac5bab3b12f39a77624d847b0e5a713e0c159cb5bf2d93aae3c0cd7724914b460dae65675f9364436682fe7de42ab481d90b131709fd23f054a317325021dc6cc9f855630abf18b3504dc61353a990d608c88cb9ff21b874bd51ba63511802f0bd4870faecf85969b0d63eade742cf66aab04e2240f18cbdb009a6d4b7ef1e06551c253e9b1d3ca077e451b42de13f3ac0b4c79def950ab2605994fe1b2cfe44d1a799bcbf8d2cf7f4e03f27b0c5daa13abb274fdc3203b00e2b09cf7dba5c5403f0f8bf957856a9d07a963fc4d5f42c0500ba8f497a3d0ff4a99556dfb713a83a1c659a807b92f1efaabf6ef2dbcfcf8634ec92d7c03d7d0278947c3dd56c0c3755aed2df0193cc31a82a9c9e15b0017105e78c442263818b510fc113c13c11e0bfdcac29af5ddf7dbe59c91cf9b265c641f3443d133694db84d17497c43c0ac36ed7ced899ef589dbd567562ee9b0790b29c065dc6c04034e86d6a26413b3e324355d55d4dfbc195a44b3ecf22333a40ad876ff50bf5d468df8c7d1be5366d01ec7aad3cfd0bcb29c2a961b8acb86657b905ad7f7573a85189f5ca99e48c11fc95995a6e625a76a011858c0c9dc31e3a5d0254e021bf62a65b3407eb71fcf6ececaa2228d09a8c60b42448b22420432cdfafa6282e9844b858fb506e00faac0363e50e2e1a90e643af5eb24d644d8baaf84e98b78b9f651fcd865abe9e36d850e20daa5d46914105620524681987736fd1a32bd0c39d1f735142acc7cd935c5e457f4c3656b46a1b1951b50f57e030b90473298b9aca547ac2f4547b4408880840edd1429ed59624ca4018120df11ccdc2f890bc0af4872fc93e444910ea203bbece9fa872e00ebe008dceef82bd9757de93de5c23dddf34a900ebb6d40ad5be8d349eb950cef8ac9a25b503afb6e50761c4df7bda72a76a245bbf98ff02bdd71add91508fa50eebf88b63a8309c07967ec7f1c8a3b79b084eb1d7ade9f1d9785ce98b59c6f7659e957117589c28dc419c9e6a77f2114c62b9b22942fefe6e4bd650141d86de6363691227a7e5849bf5ca01fba589c9ec6d8ea24a308cbeebfbfb78488620a6ed79b64ab44cba89129c54f0f21d25afb2820aec6562f436dc1fbd79622c065d808930cb235f551cb7ef8b5e3843fffc988cb64eae15d8b0e60c4d68351929a7f5125865521377a255cb59e17daf0857f2d54b3da3ce729189f11ca6548766dfb667f8d45927c0e5dd79e9202b138943ef77dd6614caf5dabfdd22d36c230757a26f5783264cf29c535815fbf982cdf653c18ec873ecd1870981f03e78251b7523b6c5a8e8b919c72fc316ad5d3b9137ca779b544ebbc3c646dfc408fd5637b41015fad58b360144d8df63bb2bdf0020ddd308b11162258f5b363ca057ebcb0547d78864327cf72ad8469fced0160f4718eaefed54566811e9c756a415ec6c32c49b6de99a72d264fd5c1756cd8afe82662a2eb20cba779903ce595afd182845b2cbd659533329cf21bc067129ee5a41fc8949a4a1b38cd77670b5c297d1d9041117a50fe31dcb2582261afbe80f481bdeaaedeced50f905191b2c3795f79ef299c5cbdbc7112cef9ab8876e623d9a76f419fe84f902601034f70905f449f58054768be44fdc6f546278ff720d4392413b455c39a0ec0bef058cb76a9edd60dcfff32c93239859906c9505ae4a4349bb557f7bf30a2a57718d5ea4565d51d345a5c72e423d68210d4642ea95fe9b08bdc092a8ac30a95f0a2900688639180f9590ff57967ddb5ef702d055d7012cee81e15485afc22ac049d2aad914723042ea624e81018ddadb1dd06782c5e39f65e707b27c9ae95f337597b6bd7b78b8c399db8da203fda23ea6be930e630fa65ba367080cf21570723e384f2665da8ba4d7e02579fd611a49b413de37a0ef7db105c2fceebd1bdd9a7a3eb2001c96db995f4e6e92676b1daa92e8970a169ad5c59f1be74152379eec271df46a298acb142f0a7bf4abe6fa81d5fcba490fea990a74418d91eae8f7b3dec404e32cbe3256e4a71ba8f09e44ce40201f437564660d0d9ac1c3ccc12326708207713deb4b06c96025a0bd3576781ba8be4678621fafd1537f9675d26f519ef2931efd00d9fbf76f2bf1e39bc06bc579953ee22151526c2ff7b4c7ec5e72948ec95d9d51a7a52e6af4ddc2e5ecd5c8cf13f8eadf18db31a899763df3e34ff62f90f93fc3a1845d77eaf7ebc73cb1627159c9ce343b8f9b42331b291a77d45dba2039e0b19cca794090653aed916a15864a45ae4e7740885a1bcb133f9d3e244b1d0533751ea6c820973c3c0ed90adaeda591dc6574d424fa38d0816d0a2fe8ec28f9d84bb2077a32364d6a0b2af4a05a74bb1050c8af2903386a58fb749e906269dd42ca856f8e72dd7d73ffc858773173f4eb217504f97de1498ab961bebcdd1741dbb4b6ede418b8a7208fac67c715dcfaeb28530e2d3aeaf1f16c8af233e4459a8ec9a0e0dce2bf9faeb7b625fcd51b55ad624cc61895e16b44c8b9a321abe946c0e1599650ec92e3568cc59e65cabcecb6015bcf9e9b7ece19bc3b10c03ef54315f0006af0549b9e46dfbda8316b6d8ec9b4a6efd5fd38495f6171dc44dafc769dd4b761b10cb32f010847614a0f7902b879785d66fb548a03cb7644ec3281c74a3a54c549456abcae420a40922652bd8e70dd9935ccd65328507a3dc9ae78b3c9e77025a634c95533b3be00b5c56b85dd27a0880aaf0b713222b1724ca3f548cda26db290b16de659545d32c7b6a3e5277400bb99c72da199797962d544a3ce1cd1ae89d5ff8acaa5f7094a9161db66add32020bbd0bf6e3957774b10ac63561b491b82d3dfbd5e1baec7844b6c6a1dc86f60f5a745339decb814de182abb29dd71d063cb42db2675e4d0899981fd79252c5b1796834d3b94e13a3be1184808e7290e22059a467e0d334b02ed72bcc0b286cda2a66cb71a0e2e124a8cd03c624faa0a390222ee2c5f6dd37fda05f8b2559663fd18a453e9167116eb2efa504e80d9d2f360a81b1a4315ad892e01613ad5d3e48468bb9d59d0be00b13fcc9825b3666e428eeb915104276c69b35b264534088f2c447a5d03cb6a1f54ed9f9b59ce448ec3c3bfd42fc24ff8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">私人房.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 我自己 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于音乐的分享</title>
      <link href="2021/05/20/%E9%9F%B3%E4%B9%90%E5%88%86%E4%BA%AB/"/>
      <url>2021/05/20/%E9%9F%B3%E4%B9%90%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p> Hello大家好!!!</p><p>这是我第一次尝试写下关于音乐分享的文章，很不成熟也很可能味如嚼蜡，谢谢您的谅解！！</p><div class="tag-plugin note" color="blue"><div class="body"><p>推荐歌单仅仅是个人喜好哦！</p></div></div><div class="tag-plugin note" color="dark"><div class="title"><strong>小提示</strong></div><div class="body"><p>全部歌曲都可以直接点击播放</p></div></div><h2 id="关于我喜欢的音乐风格"><a href="#关于我喜欢的音乐风格" class="headerlink" title="关于我喜欢的音乐风格"></a>关于我喜欢的音乐风格</h2><h3 id="小时候"><a href="#小时候" class="headerlink" title="小时候"></a>小时候</h3><p>对于听歌这件事主要还是小时侯家庭的影响，在我还在母亲肚子里时我父母听到别人聊天时说到听音乐也是一种“胎教”，便两个人去了我们这个小城市的音响店买了一对立式的音响和一个功放机，开始在家里播放音乐，根据后来他们所说，最早期播放的大多是古典音乐，像莫扎特、巴赫的钢琴曲和交响曲，后来觉得有些乏味，便开始播放邓丽君，陈百强，张学友的歌曲。</p>        <div id="aplayer-OPFyseyb" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-OPFyseyb"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "月亮代表我的心",              author: "邓丽君",              url: "http://music.163.com/song/media/outer/url?id=228755.mp3",              pic: "https://7.dusays.com/2021/04/08/1ad5d5ee80c17.jpeg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>        <div id="aplayer-QksygQac" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-QksygQac"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "偏偏喜欢你",              author: "陈百强",              url: "http://music.163.com/song/media/outer/url?id=27874938.mp3",              pic: "https://7.dusays.com/2021/04/08/9418e0dfaf794.jpeg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>        <div id="aplayer-KhRpXTpx" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-KhRpXTpx"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "吻别",              author: "张学友",              url: "http://music.163.com/song/media/outer/url?id=190449.mp3",              pic: "https://7.dusays.com/2021/04/08/018df1198900f.jpeg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>如今在我家书柜还存放着当年的CD，但也有一部分在搬家的过程中丢失了。我父母在我小时候的印象里总是会抱着一些CD回来，放进CD机等待播放，印象最深刻的是两件事，第一个便是在CD机放进CD机后并不能马上播放歌曲，因为功放机还需要一点点的“热身”，叫做热机，功放在第一次开机时会有很清脆的滴答声，而真正热身好则是在大约2分钟后有一声非常清脆的滴答声，这个时候便可以按下CD机上的播放键了。</p>        <div id="aplayer-aPMwWemI" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-aPMwWemI"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Blue Bossa",              author: "Eddie Higgins",              url: "http://music.163.com/song/media/outer/url?id=1307049.mp3",              pic: "https://i.loli.net/2021/04/08/FufDKxeGiPJdXNU.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>第二件印象深刻的事情便是小学每次放学坐公交车回家，常常会在走进屋子前听到里面传来的乐器声或者唱歌的人声，闷闷的，而打开门走进去的一瞬间耳朵就会被音乐包裹，如同爱丽丝掉进树洞一般，而如果开门前没有听到，估计是我做错了什么，需要提前做好挨揍的准备。我的许多音乐的来源在智能手机出现之前都是来自于家里CD所播放的音乐，还有一部分来自于《猫和老鼠》中的交响乐（哈）。</p>        <div id="aplayer-pKefIuLM" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-pKefIuLM"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Tom and Jerry",              author: "Bradley",              url: "http://music.163.com/song/media/outer/url?id=25962464.mp3",              pic: "https://i.loli.net/2021/04/08/UwXvYIDgdoznLMi.png",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h3 id="前智能手机"><a href="#前智能手机" class="headerlink" title="前智能手机"></a>前智能手机</h3><p>在智能手机之前其实还有一个小小的时代，我叫做前智能时代，印象最深的便是诺基亚的5230型号，有着如今智能手机基本的功能，但是操作起来并不是那么顺畅，屏幕是电容屏，需要用手指戳下去才能响应，也有了那个时候的特色就是触控笔。<br><img src="http://120.24.211.49/20221102011440.png" style="zoom:50%;" /></p><p>但当时可以将音乐随身放在一个手机里已经让我非常震撼了，当时传输的方式主要是用线连接电脑后传输，或者用蓝牙传输，蓝牙在那个时候可谓称得上是真正的黑科技，在电脑上选择文件，选择蓝牙传输到手机，那时候音乐的文件，大多数是acc或者mp3的文件，256k的音质，蓝牙的传输速率那时大约200k左右，传一张专辑的歌曲还是需要一点点耐心的。</p><p><img src="http://120.24.211.49/20221102011457.png" alt="XP的蓝牙"><br>诺基亚5230陪伴了我小学期间每天放学从学校到家里的一小段路，那时候也是网络歌手充斥网络的时代，和现在不同，那时候的网络歌手并没有一个完整的团队，很多时候只有自己录制自己唱歌就发到网上去了，虽然质量比不上如今的，但是很多经典的歌曲还是留了下来。尤其是经典的网恋歌曲….</p>        <div id="aplayer-TennnzaK" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-TennnzaK"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "爱到花开",              author: "戊道子",              url: "http://music.163.com/song/media/outer/url?id=5244681.mp3",              pic: "https://i.loli.net/2021/04/08/jMLB9rwEWPbCF48.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>我印象里在小学三四年级天天回家听的就是这首可谓是网恋元祖歌曲哈哈哈哈，以至于在很长一段时间内听到这首歌的前奏都有点起鸡皮疙瘩的感觉…..</p><h3 id="智能手机时代"><a href="#智能手机时代" class="headerlink" title="智能手机时代"></a>智能手机时代</h3><p>在初一的时候我真正的迎来了我的第一台智能手机，那便是大名鼎鼎(以前)的台湾手机厂商HTC(火腿肠)的Incredible S，出厂预装的是安卓2.2.</p><p><img src="http://120.24.211.49/20221102011513.png" alt="htc G11"></p><p>第一个下载的软件除了QQ便是QQ音乐了，还记得第一次打开QQ音乐，主页上扑面而来的帅气男人，那肯定就是周董了</p>        <div id="aplayer-tpFbHwCx" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-tpFbHwCx"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "说好的幸福呢",              author: "周杰伦",              url: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/musicstore/周杰伦-说好的幸福呢.mp3",              pic: "https://i.loli.net/2021/04/08/aILZKwO18o92p3T.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>        <div id="aplayer-zPEPpFjx" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-zPEPpFjx"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "花海",              author: "周杰伦",              url: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/musicstore/周杰伦-花海.mp3",              pic: "https://i.loli.net/2021/04/08/aILZKwO18o92p3T.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>        <div id="aplayer-etvFWvFs" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-etvFWvFs"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "给我一首歌的时间",              author: "周杰伦",              url: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/musicstore/周杰伦-给我一首歌的时间.mp3",              pic: "https://i.loli.net/2021/04/08/aILZKwO18o92p3T.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>也是在听过周董的歌之后，我对于自己所喜欢的音乐才有了一个初步的理解，那时的我喜欢干净的音乐，在歌曲里各种乐器的位置摆放合理，不会互相打架，用尽可能少的乐器演绎出丰富的听觉效果，而在那个时候，听得最多的除了周董，便是李荣浩了。</p><p>第一次认识李荣浩是在电台里，在FM102.2深夜12点开始的节目叫做《千里共良宵》，某一次广告前的过场音乐直接抓住了我的耳朵，13年的听歌识曲并不完善，我只能尽可能的记住歌词，然后再去搜索，那时候我印象最深的一句便是“越勇敢越孤单”，这一句便让我认识了李荣浩。</p>        <div id="aplayer-mVCIJMxq" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-mVCIJMxq"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "都一样",              author: "李荣浩",              url: "http://music.163.com/song/media/outer/url?id=27731172.mp3",              pic: "https://i.loli.net/2021/04/08/X6V1nOjuELw3pSF.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>那段时间向身边的同学推荐李荣浩，他们的表情就像李荣浩的眼睛一样，眯成了一条缝，那个时候没有抖音，大家听歌还是有耐心听完一整首的，大家所喜欢的风格也不同，但李荣浩在那个时候可谓时流行音乐的一个异类，前有R&amp;B教父陶喆、周董还有陈奕迅三座大山，那时候很多人说李荣浩是周杰伦加陈奕迅，也有人说李荣浩的音乐千篇一律，但是李荣浩确实闯出了一条路来。</p>        <div id="aplayer-yymnoXuD" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-yymnoXuD"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "不搭",              author: "李荣浩",              url: "http://music.163.com/song/media/outer/url?id=29764563.mp3",              pic: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/14ce36d3d539b6009f46967be350352ac75cb776.jpeg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>李荣浩最厉害的对于和声的运用，这与他多年的幕后经验是紧密相关的，许多歌曲旋律并不复杂但和声的运用使得歌曲增彩不少。</p><h3 id="吉他"><a href="#吉他" class="headerlink" title="吉他"></a>吉他</h3><p>在初三中考完的假期内我拥有了我的第一把吉他，也就是这个时候我开始真正的不仅仅去听音乐，更想要去触碰音乐。</p>        <div id="aplayer-jRYvrEDK" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-jRYvrEDK"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "拥抱",              author: "五月天",              url: "http://music.163.com/song/media/outer/url?id=386542.mp3",              pic: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/a8014c086e061d95bcc46a0c79f40ad162d9ca00.jpeg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>五月天的拥抱是我学习的第一首歌曲，当时是一位朋友的朋友在唱吧上唱了这一首并且分享给了我，当时第一次听到我便下定决心要学会这一首拥抱，第二天打开吉他教材，噢～好家伙，第一页就是这首歌的谱子，也就是在这样的机缘巧合下我慢慢开始学习一首又一首的歌，我也开始接触指弹。</p>        <div id="aplayer-NAQdhgjF" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-NAQdhgjF"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "LOVIN' YOU",              author: "押尾コータロー",              url: "http://music.163.com/song/media/outer/url?id=22822506.mp3",              pic: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/s4716396.jpeg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>押尾桑的许多歌曲都可谓是吉他指弹入门的必练曲，到并不是因为多简单，而是因为实在是太好听了，虽然许多人都认为押尾的歌曲的难度稍低，但是如果想要完整流畅地弹奏下来还是需要多年的苦练的。而上面这一首LOVIN’ YOU则是我第一首学会弹奏的指弹曲，直到现在我也不敢说我已经可以完全无压力地弹奏下来了，每一次弹奏都为这精致的编排所震撼。</p><p>在押尾桑后我开始了解更多来自世界各地的指弹大师，首先当然是来自澳洲的<em>Tommy Emmanuel</em>，还记得第一次听到close to you的弹奏时，我根本不相信这是一把吉他所能创造的效果，各种技巧和和弦都是为了旋律服务的感觉实在是太棒了。也让我对吉他的理解更加的深刻。</p>        <div id="aplayer-jIgRlnEJ" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-jIgRlnEJ"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Since We Met",              author: "Tommy Emmanuel",              url: "http://music.163.com/song/media/outer/url?id=2002030.mp3",              pic: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/s3681710.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><img src="http://120.24.211.49/20221102011533.png" alt="Tommy Emmanuel" style="zoom:50%;" /><img src="http://120.24.211.49/20221102011551.png" alt="Tommy Emmanuel" style="zoom:50%;" /><p>当然除了Tommy Emmanuel我还尤其喜欢来自日本的伍伍慧，他极具天赋的编曲以及各种古典技巧的融合使得他的曲子听起来尤其的活泼以及有生气，他所改编的爵士名曲<em>Moon River</em>不仅仅尤其地温暖，而且其中的改编更让人如痴如醉。</p>        <div id="aplayer-VFKpSGlf" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-VFKpSGlf"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Moon River",              author: "伍伍慧",              url: "http://music.163.com/song/media/outer/url?id=26450089.mp3",              pic: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/s27996751.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h3 id="方大同"><a href="#方大同" class="headerlink" title="方大同"></a>方大同</h3><p>终于在高中，我开始认识方大同。</p>        <div id="aplayer-cxHmXbiZ" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-cxHmXbiZ"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "红豆",              author: "方大同",              url: "http://m10.music.126.net/20210517202811/6dd994d699da3e242260e335e3880d91/ymusic/ff10/edf4/18cd/a81822d7d51e1de5206569eb09576e58.mp3",              pic: "http://120.24.211.49/20221102011609.png",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>“有时候　有时候</p><p>我会相信一切有尽头</p><p>相聚离开都有时候</p><p>没有什么会永垂不朽</p><p>可是我　有时候</p><p>宁愿选择留恋不放手</p><p>等到风景都看透</p><p>也许你会陪我看细水长流</p><p>”</p><p>那天晚上是我第一次认真听方大同的歌，回到宿舍我马上去向朋友借了一把吉他，开始弹奏方大同的红豆。也是第一次我从心底感觉原来弹唱也可以这么酷，吉他的编排可以如此抓耳朵。我一直弹一直弹，我舍友久违地说了一句：真好听啊。在那个时候我知道方大同这个男人以后应该会陪我很久很久了。</p><p>第二天在秋游的路上我也一直在耳机里不断地循环，回来的路上也是。</p><p>第二天开始我开始听方大同的其他歌曲，刚开始这并不是一个很顺畅的过程，以往的流行歌曲经验对于大同的歌曲来说并不管用，无论是旋律，和声，和弦，对于我来说都完全是崭新的，我还记得第一次听《暖》，并不觉得这首歌是我的菜，直到两天后第二次听，才发现，噢！太棒了！</p>        <div id="aplayer-PoVEqSEm" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-PoVEqSEm"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "暖",              author: "方大同",              url: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/musicstore/方大同-暖.mp3",              pic: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/9825bc315c6034a82b7f9283c313495409237616.jpeg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>大同的许多歌曲都是如此，有着难以言喻的前瞻性，让你在每一次重播时都觉得，这首歌太潮了！</p><p>也是因为大同，我对于音乐的理解更加深入，大同的许多音乐灵感其实是来自于他小时候所听的黑人音乐，爵士乐，放克，还有各种灵魂乐，布鲁斯以及R&amp;B。也使得他的歌曲不仅仅多元，而且极具创造性，各种即兴信手拈来。</p><p>也是在那个时候开始我开始收集方大同的专辑，像让大同的声音在音响上呈现，我第一张真正意义上的方大同发行专辑便是《橙月》。</p><img src="http://120.24.211.49/20221102011621.png" alt="Orange Moon" style="zoom: 50%;" />        <div id="aplayer-oayGrWaA" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-oayGrWaA"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "小小虫",              author: "方大同",              url: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/musicstore/方大同-小小虫.mp3",              pic: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/9d82d158ccbf6c81d15b405dbc3eb13533fa4012.jpeg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>随着听大同的歌曲越来越来，我发现我的耳朵也变刁了，尤其是听到流行歌曲的时候，不自主地会与大同的歌曲进行比较，如果这首歌是完完全全在套路之内的，那我大可能就把这首歌给pass掉，但如果有意料之外的旋律或者和弦就会马上吸引到我。</p><img src="http://120.24.211.49/20221102011632.png" alt="the show"  /><h3 id="疫情"><a href="#疫情" class="headerlink" title="疫情"></a>疫情</h3><p>疫情期间我开始花大量的时间去听歌，一天的时间都泡在音乐App中，巧合的是，在某一个晚上我打开YouTube，首页给我推荐了一张合辑，名字叫做睡前R&amp;B，封面是昏暗的房间，地上摆放着各种唱片，点击，便让我发现了这一位宝藏歌手。</p>        <div id="aplayer-ZItMRade" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-ZItMRade"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "easy",              author: "Mac Ayres",              url: "http://music.163.com/song/media/outer/url?id=519943092.mp3",              pic: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/s29520620.jpeg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>许多人评价Mac Ayres是如今被远远低估的R&amp;B歌手，我也很赞同，但他才23岁，未来可期。</p><p>这首歌还在被我用在了歌手大赛的复赛中（由于英语发音根本不标准被评委吐槽，但如果叫我评选2020年我的年度单曲，我会毫不犹豫地选择这首歌）</p><p>在疫情中我还认识了另外一位“老师”，那便是来自台湾的“李友廷老师”了</p><p>李友廷以极强的吉他演奏能力和极具个人风格的作品在台湾的综艺节目声林之王第一季夺得冠军，并在2020年底终于推出了首张个人专辑《如果你也爱我就好了》，听就好了。</p>        <div id="aplayer-UAQMCNsF" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:100%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-UAQMCNsF"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "直到我遇见了你",              author: "李友廷",              url: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/musicstore/李友廷-直到我遇见了你.mp3",              pic: "https://cdn.jsdelivr.net/gh/hamster1963/photostore/img/s33763909.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h2 id="本月推荐歌单"><a href="#本月推荐歌单" class="headerlink" title="本月推荐歌单"></a>本月推荐歌单</h2><img src="http://120.24.211.49/20221102011651.png"  /><p>@</p><p>@@</p><p>@@@</p><p>@@@@</p><p>@@@@@</p><p>@@@@@@</p><p>@@@@@@@</p><p>@@@@@@@@</p><p>@@@@@@@@@</p><h2 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h2><p>谢谢你的阅读</p><p>致敬那些漫漫长夜</p><p>谢谢ni。</p><p>2021.4.11</p>]]></content>
      
      
      <categories>
          
          <category> 音乐分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今日校园自动填写表单信息脚本</title>
      <link href="2021/05/20/%E4%BB%8A%E6%97%A5%E6%A0%A1%E5%9B%AD%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%86%99%E8%BE%85%E5%AF%BC%E5%91%98%E4%BF%A1%E6%81%AF%E8%84%9A%E6%9C%AC/"/>
      <url>2021/05/20/%E4%BB%8A%E6%97%A5%E6%A0%A1%E5%9B%AD%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%86%99%E8%BE%85%E5%AF%BC%E5%91%98%E4%BF%A1%E6%81%AF%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>感谢<a href="https://gitee.com/Finch1"><strong>Finch</strong></a>、<a href="https://gitee.com/lemofire"><strong>柠火</strong></a>提供的方法与思路。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>在windows系统下，下载压缩包，在文件夹内部按住shift并单击右键，选择<img src="http://120.24.211.49/20221102010924.png" alt="image-20210520110701674" style="zoom:50%;" /></p><p>在命令行中输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 DailyCP.py 学校全名 学号 密码 定位地址 formdb文件夹绝对路径</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 DailyCP.py xx大学 3****9 d***4 广*******路 &#x2F;Users&#x2F;*****&#x2F;Desktop&#x2F;Campus-master&#x2F;formdb</span><br></pre></td></tr></table></figure><p>输入后回车即可。</p><h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><p>在mac系统下首先打开终端，使用cd定位到DailyAUTO文件夹。</p><p>在命令行中输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 DailyCP.py 学校全名 学号 密码 定位地址 formdb文件夹绝对路径</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 DailyCP.py xx大学 3****9 d***4 广*******路 &#x2F;Users&#x2F;*****&#x2F;Desktop&#x2F;Campus-master&#x2F;formdb</span><br></pre></td></tr></table></figure><p>输入后回车即可。</p><h3 id="第一次使用"><a href="#第一次使用" class="headerlink" title="第一次使用"></a>第一次使用</h3><p>在第一次使用的时候会在屏幕上打印提醒</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">请手动填写&#x2F;Users&#x2F;***&#x2F;Desktop&#x2F;DailyAUTO&#x2F;formdb&#x2F;910e5efaed9eaea5f146faa60c3ab47a.json，之后重新运行脚本</span><br></pre></td></tr></table></figure><p>在formdb文件夹中找到相对应的json文件，使用文本编辑器打开（推荐vscode），如果打开后发现数据都集中在一行，请单击右键单击</p><img src="http://120.24.211.49/20221102010937.png" alt="image-20210520110701674" style="zoom:67%;" /><p>填写规范请查看1129.json文件。</p><p>主要修改的为select项，如果对应的为选中，则将其修改为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;isSelected&quot;: 1</span><br></pre></td></tr></table></figure><p>反之则为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;isSelected&quot;: null</span><br></pre></td></tr></table></figure><p>注意是单选还是多选题，切勿在单选题中修改多项select值为1。</p><h3 id="正式运行"><a href="#正式运行" class="headerlink" title="正式运行"></a>正式运行</h3><p>再次在命令行中输入上述命令</p><p>等待程序运行，在正常情况下会首先打印学校名字及登录地址，并打印所需要填写的表单的基本信息，下一行会打印表单详细信息（你已经填写好的）。</p><p>​                                                                                            <strong>数据已经脱敏</strong></p><img src="http://120.24.211.49/20221102010948.png" alt="image-20210520110701674" style="zoom:50%;" /><p>如果是今天的第一次填写，将会返还”SUCCESS”</p><p>如果已经填写，将会返还”该收集已填写无需再次填写”</p><h2 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h2><p>此程序仅供学习，请勿用于违法途径。</p><h2 id="文件下载地址"><a href="#文件下载地址" class="headerlink" title="文件下载地址"></a>文件下载地址</h2><p>由于法律与政策，下载地址不予显示。</p>]]></content>
      
      
      <categories>
          
          <category> python开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python，网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用python写一个自动获取局域网ip地址并开启SS服务器的小工具</title>
      <link href="2021/05/17/%E6%A0%A1%E5%9B%AD%E7%BD%91SS%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>2021/05/17/%E6%A0%A1%E5%9B%AD%E7%BD%91SS%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个学年学校把宽带运营商从之前的联通大哥哥换成了如今的电信小弟弟，使用体验可谓一落千丈，最主要的原因是电信不再像联通提供拨号上网的账号和密码，改成了强制使用天翼校园的程序来进行认证上网，而且限制只能一台设备在线，这直接搞垮了宿舍内的一堆需要联网的设备，首先想到的是通过电脑先连接在共享给路由器，感谢这位兄弟提供的方法@<a href="https://blog.csdn.net/cbcrzcbc/article/details/108612445?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161707454916780271558206%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161707454916780271558206&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-5-108612445.pc_search_result_no_baidu_js&utm_term=%E5%A4%A9%E7%BF%BC%E6%A0%A1%E5%9B%AD">task138</a>，但是转念一想，既然学校内覆盖了校园网，那是否可以使用电脑搭建服务器从而达到在校园网范围内手机或者iPad都可以上网呢?这就是今天讨论的方法。</p><div class="tag-plugin note" color="red"><div class="body"><p>此方法仅限交流，请勿在保密场所使用</p></div></div><div class="tag-plugin note" color="green"><div class="body"><p>目前仅适用于Windows</p></div></div><div class="tag-plugin note" color="dark"><div class="title"><strong>源码:</strong></div><div class="body"><p><a href="https://github.com/hamster1963/-SS-">https://github.com/hamster1963/-SS-</a></p></div></div><h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>自动获取本机局域网地址并写入配置文件</span></div><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>自动获取本机局域网地址并写入配置文件</span></div><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>开启时显示各项配置参数，帮助使用者配置代理软件</span></div><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>开启SS代理服务器，出错时显示错误弹窗</span></div><h2 id="原理与改进"><a href="#原理与改进" class="headerlink" title="原理与改进"></a>原理与改进</h2><p>开启SS代理服务器部分参考了GitHub上的<a href="https://github.com/shadowsocks/libQtShadowsocks">shadowsocks-libqss</a>项目，需要使用者手动填写config文件，使用起来学习成本有一点高，且如果没有成功运行也没有错误提示，所以使用python编写一个小脚本改进一下，以达到上述的功能。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="windows开启服务器"><a href="#windows开启服务器" class="headerlink" title="windows开启服务器"></a>windows开启服务器</h3><p>想开启SS代理服务器十分简单，如果不想更改默认的端口、密码、加密方式，可以直接双击使用 开启SS代理服务器.exe，打开后根据弹窗配置自己的代理软件，安卓小飞机，苹果小火箭，windows使用clash，macOS使用surge。</p><p>一切顺利后应该是这样的界面</p><p><img src="http://120.24.211.49/20221102011117.png" alt="WechatIMG60.png"></p><h3 id="ios使用小火箭连接"><a href="#ios使用小火箭连接" class="headerlink" title="ios使用小火箭连接"></a>ios使用小火箭连接</h3><p>在小火箭中点击右上角加号，类型选择Shadowsocks，根据配置弹窗中的信息，填入相关配置，混淆与插件为空。如图:</p><img src="http://120.24.211.49/20221102011138.png" alt="IMG_42143F5BF2D2-1.jpeg" style="zoom:33%;" /><h3 id="macos使用surge连接"><a href="#macos使用surge连接" class="headerlink" title="macos使用surge连接"></a>macos使用surge连接</h3><p>打开surge面板，在策略中选择添加</p><img src="http://120.24.211.49/20221102011153.png" alt="截屏2021-03-31 上午12.43.35.png" style="zoom: 67%;" /><p>填入配置信息，出站选择全局代理即可</p><img src="http://120.24.211.49/20221102011203.png" alt="截屏2021-03-31 上午12.44.03.png" style="zoom:67%;" /><p><img src="http://120.24.211.49/20221102011213.png" alt="截屏2021-03-31 上午12.46.18.png"></p><p>surge教程到此结束</p><h2 id="程序编写"><a href="#程序编写" class="headerlink" title="程序编写"></a>程序编写</h2><p>我们的目标其实很简单，就是获取当前IP地址并且写入到config文件中，并在启动服务器时有弹窗包含主要配置信息提醒用户。</p><h3 id="获取ip地址"><a href="#获取ip地址" class="headerlink" title="获取ip地址"></a>获取ip地址</h3><p>这是一个很通用的获取本机局域网ip地址的方法，代码如下:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取实时IP地址</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_host_ip</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    查询本机ip地址</span></span><br><span class="line"><span class="string">    :return: ip</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">        s.connect((<span class="string">&#x27;8.8.8.8&#x27;</span>, <span class="number">80</span>))</span><br><span class="line">        ip = s.getsockname()[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        s.close()</span><br><span class="line">    <span class="keyword">return</span> ip</span><br></pre></td></tr></table></figure><h3 id="将ip地址写入配置文件"><a href="#将ip地址写入配置文件" class="headerlink" title="将ip地址写入配置文件"></a>将ip地址写入配置文件</h3><p>配置文件的类型是json，在python中我们可以很轻松地修改json文件内的值，只需要知道key和value的对应关系即可，代码如下:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#将IP地址写入json文件</span></span><br><span class="line"></span><br><span class="line">filename = <span class="string">&#x27;config.json&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = json.load(f)</span><br><span class="line">    data[<span class="string">&#x27;server&#x27;</span>] = get_host_ip() <span class="comment"># &lt;--- 添加实时ip地址.</span></span><br><span class="line"></span><br><span class="line">os.remove(filename)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    json.dump(data, f, indent=<span class="number">4</span>)</span><br></pre></td></tr></table></figure><p>由于上面的 get_host_ip()是直接返还ip地址的，所以在server的value部分我们直接使用get_host_ip()即可。</p><h3 id="读取基础配置信息"><a href="#读取基础配置信息" class="headerlink" title="读取基础配置信息"></a>读取基础配置信息</h3><p>在开屏弹窗中我们需要显示基本信息，所以我们先需要读取json文件内的我们需要的value值，代码如下:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#读取json 获取端口/密码/加密方式</span></span><br><span class="line"></span><br><span class="line">filename = <span class="string">&#x27;config.json&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = json.load(f)</span><br><span class="line">    a = data[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">    b = data[<span class="string">&#x27;server_port&#x27;</span>]</span><br><span class="line">    c = data[<span class="string">&#x27;method&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="弹窗"><a href="#弹窗" class="headerlink" title="弹窗"></a>弹窗</h3><p>弹窗使用的是tkinter库，语法也十分简单，代码如下:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">talk</span>():</span></span><br><span class="line">    tkinter.messagebox.showinfo(<span class="string">&quot;提示&quot;</span>,<span class="string">&quot;你的ip地址是&quot;</span> + get_host_ip()+<span class="string">&quot;\n你的端口号是&quot;</span>+<span class="built_in">str</span>(b)+<span class="string">&quot;\n你的密码是&quot;</span> + a + <span class="string">&quot;\n加密方式是&quot;</span>+ c +<span class="string">&quot;\n请勿关闭cmd窗口&quot;</span>)</span><br></pre></td></tr></table></figure><p>实现界面如图</p><img src="http://120.24.211.49/20221102011227.png" alt="截屏2021-03-31 上午12.39.39.png" style="zoom:50%;" /><h3 id="主程序"><a href="#主程序" class="headerlink" title="主程序"></a>主程序</h3><p>基本的小组件都写好了我们最后就把积木拼成小车车🚗就可以了,加入检测是否运行成功的弹窗，代码如下:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#主程序</span></span><br><span class="line">netopen = threading.Thread(target=runserver)<span class="comment">#, daemon=True)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    netopen.start()</span><br><span class="line">    <span class="keyword">if</span> netopen.is_alive() == <span class="literal">True</span>:</span><br><span class="line">        <span class="comment">#弹窗显示</span></span><br><span class="line">        talk()</span><br><span class="line">        tkinter.messagebox.showinfo(<span class="string">&quot;欢迎&quot;</span>,<span class="string">&quot;开启成功,如需退出请关闭cmd窗口&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span>  netopen.is_alive() == <span class="literal">False</span>:</span><br><span class="line">        tkinter.messagebox.showinfo(<span class="string">&quot;退出&quot;</span>,<span class="string">&quot;服务已退出，请检查配置&quot;</span>)</span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure><div class="tag-plugin note"><div class="title"><strong>quote,</strong></div><div class="body"><p>由于我们是调用了外部的程序，所以这里使用线程监控来实现检测服务器程序是否正确运行。</p></div></div><h3 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h3><p>完整源码如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化弹窗</span></span><br><span class="line">root = tkinter.Tk()</span><br><span class="line">root.withdraw()</span><br><span class="line">root.wm_attributes(<span class="string">&#x27;-topmost&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取实时IP地址</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_host_ip</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    查询本机ip地址</span></span><br><span class="line"><span class="string">    :return: ip</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">        s.connect((<span class="string">&#x27;8.8.8.8&#x27;</span>, <span class="number">80</span>))</span><br><span class="line">        ip = s.getsockname()[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        s.close()</span><br><span class="line">    <span class="keyword">return</span> ip</span><br><span class="line"></span><br><span class="line"><span class="comment">#将IP地址写入json文件</span></span><br><span class="line"></span><br><span class="line">filename = <span class="string">&#x27;config.json&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = json.load(f)</span><br><span class="line">    data[<span class="string">&#x27;server&#x27;</span>] = get_host_ip() <span class="comment"># &lt;--- 添加实时ip地址.</span></span><br><span class="line"></span><br><span class="line">os.remove(filename)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    json.dump(data, f, indent=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#读取json 获取端口/密码/加密方式</span></span><br><span class="line"></span><br><span class="line">filename = <span class="string">&#x27;config.json&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = json.load(f)</span><br><span class="line">    a = data[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">    b = data[<span class="string">&#x27;server_port&#x27;</span>]</span><br><span class="line">    c = data[<span class="string">&#x27;method&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runserver</span>():</span></span><br><span class="line">    os.system(<span class="string">&#x27;shadowsocks-server.bat&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">talk</span>():</span></span><br><span class="line">    tkinter.messagebox.showinfo(<span class="string">&quot;提示&quot;</span>,<span class="string">&quot;你的ip地址是&quot;</span> + get_host_ip()+<span class="string">&quot;\n你的端口号是&quot;</span>+<span class="built_in">str</span>(b)+<span class="string">&quot;\n你的密码是&quot;</span> + a + <span class="string">&quot;\n加密方式是&quot;</span>+ c +<span class="string">&quot;\n请勿关闭cmd窗口&quot;</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment">#主程序</span></span><br><span class="line">netopen = threading.Thread(target=runserver)<span class="comment">#, daemon=True)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    netopen.start()</span><br><span class="line">    <span class="keyword">if</span> netopen.is_alive() == <span class="literal">True</span>:</span><br><span class="line">        <span class="comment">#弹窗显示</span></span><br><span class="line">        talk()</span><br><span class="line">        tkinter.messagebox.showinfo(<span class="string">&quot;欢迎&quot;</span>,<span class="string">&quot;开启成功,如需退出请关闭cmd窗口&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span>  netopen.is_alive() == <span class="literal">False</span>:</span><br><span class="line">        tkinter.messagebox.showinfo(<span class="string">&quot;退出&quot;</span>,<span class="string">&quot;服务已退出，请检查配置&quot;</span>)</span><br></pre></td></tr></table></figure><p>逻辑还是比较简单的，基本就是在调用不同的组件，但是成品还是很不错的，大大降低了学习和使用成本。</p><h2 id="最后想说的话"><a href="#最后想说的话" class="headerlink" title="最后想说的话"></a>最后想说的话</h2><p>这个方法对于校园网来说只能算是另辟蹊径，并没有完全从根本上解决问题，如果天翼校园的客户端能写得好一点，连接设备数能放宽一点，想必会受到更多学生的接纳。See you next time！欢迎评论！</p>]]></content>
      
      
      <categories>
          
          <category> python开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 服务器 </tag>
            
            <tag> SS </tag>
            
            <tag> 校园网 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在搭载M1芯片的mac上使用face_recognition库实现实时人脸识别小demo</title>
      <link href="2021/05/17/M1%20%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
      <url>2021/05/17/M1%20%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​        在搭载M1芯片的mac上顺利进行开发是一件不仅随缘而且需要人品的事情，不仅仅因为M1芯片的ARM架构所带来的编译方式的不同，bugsur新的文件路径系统以及时不时的抽风也使得顺利开发的路上艰难险阻。今天就来看看GitHub上大名鼎鼎的开源人脸库face_recognition如何比较顺利地在M1上跑起来且实现简单的实时人脸识别的功能。</p><div class="tag-plugin note" color="red"><div class="body"><p>由于不可描述的原因，网络环境所造成的安装失败不在本文讨论范围中。</p></div></div><h1 id="第一部分-关于环境的那点事"><a href="#第一部分-关于环境的那点事" class="headerlink" title="第一部分  关于环境的那点事"></a>第一部分  关于环境的那点事</h1><h2 id="网络环境搭建"><a href="#网络环境搭建" class="headerlink" title="网络环境搭建"></a>网络环境搭建</h2><div class="tag-plugin note" color="green"><div class="body"><p>建议进行设置省去不必要的麻烦</p></div></div><p>大部分的环境搭建与库安装需要使用终端进行，由于终端默认并不走代理的网络，</p><p>为了此后下载的顺利，先需要设置终端也可以使用代理。</p><p>首先，在当前用户根目录新建一个文件名为 .bash_profile的空白文本「. 开头文件为隐藏文件」，然后输入以下代码：</p><figure class="highlight md"><figcaption><span>.bash_profile</span></figcaption><table><tr><td class="code"><pre><span class="line">function proxy<span class="emphasis">_off()&#123;</span></span><br><span class="line"><span class="emphasis">        unset http_</span>proxy</span><br><span class="line"><span class="code">        unset https_proxy</span></span><br><span class="line"><span class="code">        unset ftp_proxy</span></span><br><span class="line"><span class="code">        unset rsync_proxy</span></span><br><span class="line"><span class="code">        echo -e &quot;已关闭代理&quot;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code"> </span></span><br><span class="line"><span class="code">function proxy_on() &#123;</span></span><br><span class="line"><span class="code">        export no_proxy=&quot;localhost,127.0.0.1,localaddress,.localdomain.com&quot;</span></span><br><span class="line"><span class="code">        export http_proxy=&quot;http://127.0.0.1:1087&quot;</span></span><br><span class="line"><span class="code">        export https_proxy=$http_proxy</span></span><br><span class="line"><span class="code">        export ftp_proxy=$http_proxy</span></span><br><span class="line"><span class="code">        export rsync_proxy=$http_proxy</span></span><br><span class="line"><span class="code">        export HTTP_PROXY=$http_proxy</span></span><br><span class="line"><span class="code">        export HTTPS_PROXY=$http_proxy</span></span><br><span class="line"><span class="code">        export FTP_PROXY=$http_proxy</span></span><br><span class="line"><span class="code">        export RSYNC_PROXY=$http_proxy</span></span><br><span class="line"><span class="code">        echo -e &quot;已开启代理&quot;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure><p>在<strong>export no_proxy</strong>与<strong>export http_proxy</strong>填入对应的本地代理服务器地址以及端口</p><p>可以在你的代理软件中查看</p><p><img src="http://120.24.211.49/20221102010705.png" alt="截屏2021-03-31 上午12.42.42.png"></p><p>将文件配置好并放在用户根目录后</p><h3 id="当让终端走代理的时候，输入："><a href="#当让终端走代理的时候，输入：" class="headerlink" title="当让终端走代理的时候，输入："></a>当让终端走代理的时候，输入：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source  ~&#x2F;.bash_profile</span><br><span class="line">proxy_on</span><br></pre></td></tr></table></figure><h3 id="想关闭代理的时候，输入："><a href="#想关闭代理的时候，输入：" class="headerlink" title="想关闭代理的时候，输入："></a>想关闭代理的时候，输入：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">proxy_off</span><br></pre></td></tr></table></figure><div class="tag-plugin note" color="orange"><div class="body"><p>此为一次性设置，关闭终端后失效</p></div></div><h2 id="基本环境搭建"><a href="#基本环境搭建" class="headerlink" title="基本环境搭建"></a>基本环境搭建</h2><h3 id="安装python最新版本"><a href="#安装python最新版本" class="headerlink" title="安装python最新版本"></a>安装python最新版本</h3><p>从python官网下载最新版本python 记得选中 <a href="https://www.python.org/ftp/python/3.9.2/python-3.9.2-macos11.pkg">macOS 64-bit universal2 installer</a></p><div class="tag-plugin note" color="black"><div class="title"><strong>下载地址</strong></div><div class="body"><p><a href="https://www.python.org/downloads/mac-osx/">https://www.python.org/downloads/mac-osx/</a></p></div></div><p>安装完成后在终端输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">open ~&#x2F;.bash_profile </span><br></pre></td></tr></table></figure><p>在文件中加上一行环境变量配置后保存退出</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;bin:$PATH   </span><br></pre></td></tr></table></figure><p>重新打开终端输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source ~&#x2F;.bash_profile </span><br><span class="line">python3 --version     -------注意是python3</span><br></pre></td></tr></table></figure><p>顺利的话你会在终端中看到python的版本号信息，python安装到此结束</p><h3 id="各种依赖包安装"><a href="#各种依赖包安装" class="headerlink" title="各种依赖包安装"></a>各种依赖包安装</h3><div class="tag-plugin note"><div class="title"><strong>radiation</strong></div><div class="body"><p>yellow, 头铁的可以试试直接安装 设置好终端网络代理后 在终端中输入 pip3 install face_recognition</p></div></div><p>在安装face_recognition之前我们需要安装</p><div class="tag-plugin checkbox" ><input type="checkbox"/><span>homebrew</span></div><div class="tag-plugin checkbox" ><input type="checkbox"/><span>miniforge</span></div><div class="tag-plugin checkbox" ><input type="checkbox"/><span>numpy</span></div><div class="tag-plugin checkbox" ><input type="checkbox"/><span>openblas</span></div><div class="tag-plugin checkbox" ><input type="checkbox"/><span>opencv</span></div><div class="tag-plugin checkbox" ><input type="checkbox"/><span>cmake</span></div><div class="tag-plugin checkbox" ><input type="checkbox"/><span>dlib</span></div><h3 id="安装homebrew"><a href="#安装homebrew" class="headerlink" title="安装homebrew"></a>安装homebrew</h3><div class="tag-plugin note" color="red"><div class="body"><p>唯一的重点是配置环境变量</p></div></div><p>下载安装过程略</p><p>安装完成后根据提示在终端中输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">open ~&#x2F; .zprofile</span><br></pre></td></tr></table></figure><p>在文件中加入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eval &quot;$(&#x2F;opt&#x2F;homebrew&#x2F;bin&#x2F;brew shellenv)&quot;</span><br></pre></td></tr></table></figure><p>保存后重启homebrew，在终端中输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew</span><br></pre></td></tr></table></figure><p>如果出现各种指令提示，证明安装成功</p><h3 id="安装miniforge"><a href="#安装miniforge" class="headerlink" title="安装miniforge"></a>安装miniforge</h3><div class="tag-plugin note" color="purple"><div class="title"><strong>注意</strong></div><div class="body"><p>鉴于M1版本的开发工具适配进程目前并不同步，所以这里使用miniforge来进行库管理</p></div></div><p>在网站中选择Apple Silicon版本下载，下载后直接运行即可</p><img src="http://120.24.211.49/20221102010732.png" width="50%"><p>接下来我们需要在终端中激活</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda create -n myenv python&#x3D;3.9 &#x2F;&#x2F;创建名为myenv，python版本为3.9的环境</span><br><span class="line">conda activate myenv &#x2F;&#x2F;激活环境</span><br></pre></td></tr></table></figure><h3 id="安装numpy"><a href="#安装numpy" class="headerlink" title="安装numpy"></a>安装numpy</h3><p>激活conda且配置好网络代理后可以直接在终端中输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install numpy&#x3D;1.9.14</span><br></pre></td></tr></table></figure><p>等待下载安装，安装完成后检测是否安装成功，在终端中输入</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> numpy</span><br></pre></td></tr></table></figure><p>没报错的话就安装成功了</p><h3 id="安装openblas"><a href="#安装openblas" class="headerlink" title="安装openblas"></a>安装openblas</h3><p>激活conda且配置好网络代理后可以直接在终端中输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install openblas</span><br></pre></td></tr></table></figure><p>等待下载安装，安装完成后检测是否安装成功，在终端中输入</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 </span><br><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> openblas</span><br></pre></td></tr></table></figure><p>没报错安装成功</p><h3 id="需要编译的库"><a href="#需要编译的库" class="headerlink" title="需要编译的库"></a>需要编译的库</h3><div class="tag-plugin checkbox" ><input type="checkbox"/><span>opencv</span></div><div class="tag-plugin checkbox" ><input type="checkbox"/><span>cmake</span></div><div class="tag-plugin checkbox" ><input type="checkbox"/><span>dlib</span></div><div class="tag-plugin note" color="yellow"><div class="body"><p>这三个包如果安装失败，可以多试几次，cmake有概率编译失败</p></div></div><h3 id="安装opencv"><a href="#安装opencv" class="headerlink" title="安装opencv"></a>安装opencv</h3><p>点击链接下载opencv库，仅适用于M1芯片</p><p><a href="https://github.com/wizyoung/AppleSiliconSelfBuilds/blob/main/builds/opencv_contrib_python-4.5.0+bbaa777-cp39-cp39-macosx_11_0_arm64.whl">opencv_contrib_python-4.5.0+bbaa777-cp39-cp39-macosx_11_0_arm64.whl</a></p><p>在终端中激活环境</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda activate myenv &#x2F;&#x2F;激活环境</span><br></pre></td></tr></table></figure><p>定位到下载目录并安装</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd 目录</span><br><span class="line">pip3 install opencv_contrib_python-4.5.0+bbaa777-cp39-cp39-macosx_11_0_arm64.whl</span><br></pre></td></tr></table></figure><p>等待安装即可</p><h3 id="安装cmake"><a href="#安装cmake" class="headerlink" title="安装cmake"></a>安装cmake</h3><p>终端配置好网络代理后输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install cmake &#x2F;&#x2F;安装cmake</span><br></pre></td></tr></table></figure><h3 id="安装Dlib"><a href="#安装Dlib" class="headerlink" title="安装Dlib"></a>安装Dlib</h3><p>激活conda且配置好网络代理后直接在终端中输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install dlib </span><br></pre></td></tr></table></figure><p>安装后在终端输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3</span><br><span class="line">&gt;&gt;&gt;import dlib</span><br></pre></td></tr></table></figure><p>如果未报错恭喜你安装成功，我们就差最后一步了</p><p>对着检查一下吧</p><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>homebrew</span></div><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>miniforge</span></div><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>numpy</span></div><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>openblas</span></div><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>opencv</span></div><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>cmake</span></div><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>dlib</span></div><h2 id="安装face-recognition"><a href="#安装face-recognition" class="headerlink" title="安装face_recognition"></a>安装face_recognition</h2><p>激活conda且配置好网络代理后直接在终端中输入</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip3 install face_recognition</span><br></pre></td></tr></table></figure><div class="tag-plugin note" color="light"><div class="body"><p>如果出现了任何错误，欢迎在评论区告诉我</p></div></div><div class="tag-plugin note" color="green"><div class="title"><strong>温馨提示</strong></div><div class="body"><p>此过程需要网络以及人品双buff叠加，请坐和放宽……</p></div></div><p>安装完成后在终端中输入</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> face_recognition</span><br></pre></td></tr></table></figure><p>如果没有报错证明万里长征我们已经走了一半了。</p><p>也可以使用 pip3 list 命令来查看所有已经安装的库 如图</p><p><img src="http://120.24.211.49/20221102010750.png" alt="截屏2021-03-31 上午1.05.28.png"></p><p>到此安装告一段落</p><h1 id="第二部分-开始造轮子吧"><a href="#第二部分-开始造轮子吧" class="headerlink" title="第二部分  开始造轮子吧"></a>第二部分  开始造轮子吧</h1><p>由于安装这些依赖和库可能已经损耗你的大部分精力了，</p><p>所以接下来我们就快速地来看看怎么把这个简单的实时人脸识别跑起来吧。</p><div class="tag-plugin note" color="red"><div class="body"><p>摄像头是必须的，所以请不要关上盖子运行接下来的步骤</p></div></div><h3 id="下载py文件"><a href="#下载py文件" class="headerlink" title="下载py文件"></a>下载py文件</h3><p>从GitHub上下载</p><p><a href="https://github.com/ageitgey/face_recognition/blob/master/examples/facerec_from_webcam_faster.py">facerec_from_webcam_faster.py</a></p><h3 id="使用编辑器编辑"><a href="#使用编辑器编辑" class="headerlink" title="使用编辑器编辑"></a>使用编辑器编辑</h3><p>用你喜欢的编辑器打开，这里使用vscode示范，下面代码都是从源文件中截出，对应修改即可。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Load a sample picture and learn how to recognize it.</span></span><br><span class="line"></span><br><span class="line">图片人名1_image = face_recognition.load_image_file(<span class="string">&quot;把这里改成你要识别的图片的路径&quot;</span>)   </span><br><span class="line"></span><br><span class="line">图片人名1_face_encoding = face_recognition.face_encodings(图片人名1_image)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load a second sample picture and learn how to recognize it.</span></span><br><span class="line"></span><br><span class="line">图片人名2_image = face_recognition.load_image_file(<span class="string">&quot;把这里改成你要识别的图片2的路径&quot;</span>)</span><br><span class="line"></span><br><span class="line">图片人名2_face_encoding = face_recognition.face_encodings(图片人名1_image)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create arrays of known face encodings and their names</span></span><br><span class="line">known_face_encodings = [</span><br><span class="line">    图片人名1_face_encoding,</span><br><span class="line">    图片人名2_face_encoding</span><br><span class="line">]</span><br><span class="line">known_face_names = [</span><br><span class="line">    <span class="string">&quot;图片1所对应的全名&quot;</span>,</span><br><span class="line">    <span class="string">&quot;图片2所对应的全名&quot;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>如图，图片1为Obama，图片2为biden</p><img src="http://120.24.211.49/20221102010811.png" alt="WX20210328-193809@2x.png"  /><h3 id="运行一下吧！"><a href="#运行一下吧！" class="headerlink" title="运行一下吧！"></a>运行一下吧！</h3><p>打开终端，输入</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 &lt;将文件拖到这里或者粘贴文件的路径&gt;</span><br></pre></td></tr></table></figure><p>就像这样</p><p><img src="http://120.24.211.49/20221102010831.png" alt="WX20210328-195510@2x.png"> </p><p>按下回车等待奇迹的发生</p><p>不出意外的话，掏出你的小手机拿出一张照片或者把你的脸对准摄像头，就可以看到</p><img src="http://120.24.211.49/20221102010843.png" alt="521616932197_.pic_hd.jpg" style="zoom:60%;" /><h2 id="大功告成啦！"><a href="#大功告成啦！" class="headerlink" title="大功告成啦！"></a>大功告成啦！</h2><h1 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h1><p>总体来说跑起这个小项目还是基本没有难度的，最主要的是有稳定的网络以及足够的耐心</p><p>face_recognition这个库具有很多方向的应用，今天只是简单地入门一下，还有很多玩法可以发掘哦！</p><div class="tag-plugin note" color="dark"><div class="title"><strong>致谢</strong></div><div class="body"><p>谢谢阅读，欢迎你的留言！</p></div></div>]]></content>
      
      
      <categories>
          
          <category> python开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> macOS </tag>
            
            <tag> M1 </tag>
            
            <tag> face_recognition </tag>
            
            <tag> 人脸识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在openwrt上使用DDNSTO插件进行远程管理</title>
      <link href="2021/04/05/DDNSTO/"/>
      <url>2021/04/05/DDNSTO/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="tag-plugin note" color="orange"><div class="body"><p>DDNSTO有付费与免费两种模式选择，免费套餐需要每隔7天手动进行一次续期</p></div></div><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>openwrt是目前众多路由器刷机的选择，界面美观而且插件丰富，但是有一定的上手成本，远程管理路由器在openwrt上的配置并不简单，ddnsto的出现大大降低了新手的使用成本，使用体验也十分友好。</p><h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><div class="tag-plugin note" color="green"><div class="title"><strong>小提示</strong></div><div class="body"><p>本插件理论上适用于任何基于openwrt的原版或者第三方路由器</p></div></div><div class="tag-plugin note" color="green"><div class="body"><p>本文使用LEDE固件进行演示</p></div></div><h3 id="安装DDNSTO插件"><a href="#安装DDNSTO插件" class="headerlink" title="安装DDNSTO插件"></a>安装DDNSTO插件</h3><p>从网站中下载对应架构版本的ipk文件</p><div class="tag-plugin note" color="dark"><div class="title"><strong>下载地址</strong></div><div class="body"><p><a href="https://firmware.koolshare.cn/binary/ddnsto/openwrt/">https://firmware.koolshare.cn/binary/ddnsto/openwrt/</a></p></div></div><p>在openwrt路由器后台管理界面中安装插件</p><p>使用文件传输功能将.ipk文件上传至/tmp/upload/</p><p><img src="http://120.24.211.49/20221102010222.png" alt="截屏2021-04-05 下午10.13.25.png"></p><p>上传成功后跳转至软件包页面</p><p><img src="http://120.24.211.49/20221102010239.png" alt="截屏2021-04-05 下午10.15.02.png"></p><p>在下载并安装软件包输入框中输入/tmp/upload/对应的名字.ipk等待安装完成</p><p>在服务中看到DDNS.to内网穿透一栏就证明安装成功了</p><h3 id="配置DDNSTO"><a href="#配置DDNSTO" class="headerlink" title="配置DDNSTO"></a>配置DDNSTO</h3><p>打开<a href="https://www.ddnsto.com点击右上角登录后台并使用微信注册/">https://www.ddnsto.com点击右上角登录后台并使用微信注册</a></p><p>复制页面上的令牌<img src="http://120.24.211.49/20221102010251.png" alt="image-20210405222125549.png"></p><p>回到路由器页面打开DDNS.to插件页面在令牌框内将复制的令牌粘贴并勾选启用，点击页面的保存&amp;应用</p><p><img src="http://120.24.211.49/20221102010305.png" alt="截屏2021-04-05 下午10.23.04.png"></p><p>稍等片刻回到DDNSTO后台，你的路由器应该就会出现在页面中。</p><p>点击添加域名映射，输入你喜欢的名字并将路由器的内网地址填入并保存。</p><h2 id="使用DDNSTO"><a href="#使用DDNSTO" class="headerlink" title="使用DDNSTO"></a>使用DDNSTO</h2><p>一切配置完成后应该如图一样</p><p><img src="http://120.24.211.49/20221102010319.png" alt="WX20210405-222616@2x.png"></p><p>点击给出的域名，如果可以正确跳转至路由器管理页面，恭喜你已经可以正常使用啰！SEE YOU NEXT TIME！</p>]]></content>
      
      
      <categories>
          
          <category> openwrt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openwrt </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
